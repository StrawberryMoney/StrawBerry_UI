{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ali_9\\\\Desktop\\\\StrawBerry_UI\\\\src\\\\components\\\\Nav\\\\AccountButton.tsx\";\nimport React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { useWallet } from 'use-wallet';\nimport useModal from '../../hooks/useModal';\nimport WalletProviderModal from '../WalletProviderModal';\nimport AccountModal from './AccountModal';\n\nconst AccountButton = _ref => {\n  let {\n    text,\n    onOpen\n  } = _ref;\n  const {\n    account\n  } = useWallet();\n  const [onPresentAccountModal] = useModal( /*#__PURE__*/React.createElement(AccountModal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 44\n    }\n  }));\n  const [isWalletProviderOpen, setWalletProviderOpen] = useState(false);\n\n  const handleWalletProviderOpen = () => {\n    // fixme: don't know why this closes the provider modal too.\n    // onOpen && onOpen();\n    setWalletProviderOpen(true);\n  };\n\n  const handleWalletProviderClose = () => {\n    setWalletProviderOpen(false);\n  };\n\n  const handleAccountModalOpen = () => {\n    onPresentAccountModal();\n    onOpen && onOpen();\n  };\n\n  const buttonText = text ? text : 'Unlock';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, !account ? /*#__PURE__*/React.createElement(Button, {\n    onClick: handleWalletProviderOpen,\n    color: \"primary\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, buttonText) : /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleAccountModalOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"My Wallet\"), /*#__PURE__*/React.createElement(WalletProviderModal, {\n    open: isWalletProviderOpen,\n    handleClose: handleWalletProviderClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default AccountButton;","map":{"version":3,"sources":["C:/Users/ali_9/Desktop/StrawBerry_UI/src/components/Nav/AccountButton.tsx"],"names":["React","useState","Button","useWallet","useModal","WalletProviderModal","AccountModal","AccountButton","text","onOpen","account","onPresentAccountModal","isWalletProviderOpen","setWalletProviderOpen","handleWalletProviderOpen","handleWalletProviderClose","handleAccountModalOpen","buttonText"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,mBAAP,MAAgC,wBAAhC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAOA,MAAMC,aAA2C,GAAG,QAAsB;AAAA,MAArB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAqB;AACxE,QAAM;AAAEC,IAAAA;AAAF,MAAcP,SAAS,EAA7B;AACA,QAAM,CAACQ,qBAAD,IAA0BP,QAAQ,eAAC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAD,CAAxC;AAEA,QAAM,CAACQ,oBAAD,EAAuBC,qBAAvB,IAAgDZ,QAAQ,CAAC,KAAD,CAA9D;;AAEA,QAAMa,wBAAwB,GAAG,MAAM;AACrC;AACA;AACAD,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD,GAJD;;AAMA,QAAME,yBAAyB,GAAG,MAAM;AACtCF,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD,GAFD;;AAIA,QAAMG,sBAAsB,GAAG,MAAM;AACnCL,IAAAA,qBAAqB;AACrBF,IAAAA,MAAM,IAAIA,MAAM,EAAhB;AACD,GAHD;;AAKA,QAAMQ,UAAU,GAAGT,IAAI,GAAGA,IAAH,GAAU,QAAjC;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACE,OAAD,gBACC,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEI,wBAAjB;AAA2C,IAAA,KAAK,EAAC,SAAjD;AAA2D,IAAA,OAAO,EAAC,WAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,UADH,CADD,gBAKC,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,OAAO,EAAED,sBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANJ,eAWE,oBAAC,mBAAD;AAAqB,IAAA,IAAI,EAAEJ,oBAA3B;AAAiD,IAAA,WAAW,EAAEG,yBAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF;AAgBD,CAvCD;;AAyCA,eAAeR,aAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { useWallet } from 'use-wallet';\nimport useModal from '../../hooks/useModal';\nimport WalletProviderModal from '../WalletProviderModal';\nimport AccountModal from './AccountModal';\n\ninterface AccountButtonProps {\n  text?: string;\n  onOpen?: () => void;\n}\n\nconst AccountButton: React.FC<AccountButtonProps> = ({ text, onOpen }) => {\n  const { account } = useWallet();\n  const [onPresentAccountModal] = useModal(<AccountModal />);\n\n  const [isWalletProviderOpen, setWalletProviderOpen] = useState(false);\n\n  const handleWalletProviderOpen = () => {\n    // fixme: don't know why this closes the provider modal too.\n    // onOpen && onOpen();\n    setWalletProviderOpen(true);\n  };\n\n  const handleWalletProviderClose = () => {\n    setWalletProviderOpen(false);\n  };\n\n  const handleAccountModalOpen = () => {\n    onPresentAccountModal();\n    onOpen && onOpen();\n  }\n\n  const buttonText = text ? text : 'Unlock';\n\n  return (\n    <div>\n      {!account ? (\n        <Button onClick={handleWalletProviderOpen} color=\"primary\" variant=\"contained\">\n          {buttonText}\n        </Button>\n      ) : (\n        <Button variant=\"contained\" color=\"primary\" onClick={handleAccountModalOpen}>\n          My Wallet\n        </Button>\n      )}\n\n      <WalletProviderModal open={isWalletProviderOpen} handleClose={handleWalletProviderClose} />\n      {/* <AccountModal open={isAccountModalOpen} handleClose={handleAccountModalClose}/> */}\n    </div>\n  );\n};\n\nexport default AccountButton;\n"]},"metadata":{},"sourceType":"module"}