{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ali_9\\\\Desktop\\\\StrawBerry_UI\\\\src\\\\views\\\\Cemetery\\\\CemeteryCard.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport { Box, Button, Card, CardActions, CardContent, Typography, Grid } from '@material-ui/core';\nimport { tomb, tShare } from '../../tomb-finance/deployments/deployments.mainnet.json';\nimport TokenSymbol from '../../components/TokenSymbol';\nimport ProgressCountdown from './ProgressCountdown';\nimport useStatsForPool from '../../hooks/useStatsForPool';\n\nconst CemeteryCard = _ref => {\n  let {\n    bank\n  } = _ref;\n  const statsOnPool = useStatsForPool(bank);\n  let getDepositTokenLink;\n\n  if (bank.depositTokenName.endsWith('LP')) {\n    if (bank.depositTokenName.includes('BERRY')) {\n      getDepositTokenLink = 'https://traderjoexyz.com/pool/AVAX/' + (tomb === null || tomb === void 0 ? void 0 : tomb.address);\n    } else {\n      getDepositTokenLink = 'https://traderjoexyz.com/pool/AVAX/' + (tShare === null || tShare === void 0 ? void 0 : tShare.address);\n    }\n  } else {\n    getDepositTokenLink = 'https://traderjoexyz.com/trade?outputCurrency=' + bank.depositToken.address;\n  }\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    variant: \"outlined\",\n    style: {\n      border: '1px solid var(--white)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    style: {\n      position: 'relative'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    style: {\n      position: 'absolute',\n      right: '0px',\n      top: '-5px',\n      height: '48px',\n      width: '48px',\n      borderRadius: '40px',\n      backgroundColor: 'transparent',\n      alignItems: 'center',\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TokenSymbol, {\n    size: 40,\n    symbol: bank.depositTokenName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, bank.depositTokenName), Date.now() >= new Date(bank.starttime).getTime() ? null : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Starts In: \", /*#__PURE__*/React.createElement(ProgressCountdown, {\n    color: \"#040d4e\",\n    base: moment().toDate(),\n    hideBar: true,\n    deadline: new Date(bank.starttime),\n    description: \"start pool\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 54\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Deposit: \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: '#040d4e',\n      fontWeight: '700'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 24\n    }\n  }, bank.depositTokenName.toUpperCase())), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 14\n    }\n  }, \"Earn: \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: '#040d4e',\n      fontWeight: '700'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 20\n    }\n  }, bank.earnTokenName.toUpperCase(), \" \")), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Daily APR: \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: '#040d4e',\n      fontWeight: '700'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 26\n    }\n  }, bank.closedForStaking || bank.genesisFinished ? '0.00' : statsOnPool === null || statsOnPool === void 0 ? void 0 : statsOnPool.dailyAPR, \"%\")), !bank.depositTokenName.endsWith('LP') && /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, \"Deposit Fee: \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: '#040d4e',\n      fontWeight: '700'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 30\n    }\n  }, \"1%\")))), /*#__PURE__*/React.createElement(CardActions, {\n    style: {\n      justifyContent: 'flex-end'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    style: {\n      textDecoration: 'none'\n    },\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: getDepositTokenLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    size: \"small\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, bank.depositTokenName.endsWith('LP') ? 'Add LP' : 'Buy')), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    size: \"small\",\n    variant: \"contained\",\n    component: Link,\n    to: `/garden/${bank.contract}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"Stake\"))));\n};\n\nexport default CemeteryCard;","map":{"version":3,"sources":["C:/Users/ali_9/Desktop/StrawBerry_UI/src/views/Cemetery/CemeteryCard.js"],"names":["React","Link","moment","Box","Button","Card","CardActions","CardContent","Typography","Grid","tomb","tShare","TokenSymbol","ProgressCountdown","useStatsForPool","CemeteryCard","bank","statsOnPool","getDepositTokenLink","depositTokenName","endsWith","includes","address","depositToken","border","position","right","top","height","width","borderRadius","backgroundColor","alignItems","display","justifyContent","Date","now","starttime","getTime","toDate","color","fontWeight","toUpperCase","earnTokenName","closedForStaking","genesisFinished","dailyAPR","textDecoration","contract"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport { Box, Button, Card, CardActions, CardContent, Typography, Grid } from '@material-ui/core';\nimport { tomb , tShare } from '../../tomb-finance/deployments/deployments.mainnet.json';\nimport TokenSymbol from '../../components/TokenSymbol';\nimport ProgressCountdown from './ProgressCountdown';\nimport useStatsForPool from '../../hooks/useStatsForPool';\n\nconst CemeteryCard = ({ bank }) => {\n  const statsOnPool = useStatsForPool(bank);\n  let getDepositTokenLink;\n  if(bank.depositTokenName.endsWith('LP')) {\n    if(bank.depositTokenName.includes('BERRY')) {\n      getDepositTokenLink = 'https://traderjoexyz.com/pool/AVAX/' + tomb?.address;\n    } else {\n      getDepositTokenLink = 'https://traderjoexyz.com/pool/AVAX/' + tShare?.address;\n    }\n  } else {\n    getDepositTokenLink = 'https://traderjoexyz.com/trade?outputCurrency=' + bank.depositToken.address;\n  }\n  return (\n    <Grid item xs={12} md={4} lg={4}>\n\t\t <Card variant=\"outlined\" style={{ border: '1px solid var(--white)' }}>\n        <CardContent>\n          <Box style={{ position: 'relative' }}>\n            <Box\n              style={{\n                position: 'absolute',\n                right: '0px',\n                top: '-5px',\n                height: '48px',\n                width: '48px',\n                borderRadius: '40px',\n                backgroundColor: 'transparent',\n                alignItems: 'center',\n                display: 'flex',\n                justifyContent: 'center',\n              }}\n            >\n              <TokenSymbol size={40} symbol={bank.depositTokenName} />\n            </Box>\n            <Typography variant=\"h5\" component=\"h2\">\n              {bank.depositTokenName}\n            </Typography>\n            {Date.now() >= new Date(bank.starttime).getTime() ? null : \n            <div style={{display:'flex'}}>Starts In: <ProgressCountdown color=\"#040d4e\" base={moment().toDate()} hideBar={true} deadline={new Date(bank.starttime)} description=\"start pool\" /></div> }\n            <Typography color=\"textSecondary\">\n              {/* {bank.name} */}\n              Deposit: <span style={{color: '#040d4e', fontWeight:'700'}}>{bank.depositTokenName.toUpperCase()}</span>\n            </Typography>\n              {/* Commenting out for now as it seems to be blocking and site doesnt load properly */}\n             <Typography color=\"textSecondary\">\n             Earn: <span style={{color: '#040d4e', fontWeight:'700'}}>{bank.earnTokenName.toUpperCase()} </span>\n            </Typography>\n            <Typography color=\"textSecondary\">\n              Daily APR: <span style={{color: '#040d4e', fontWeight:'700'}}>{bank.closedForStaking || bank.genesisFinished ? '0.00' : statsOnPool?.dailyAPR}%</span>\n            </Typography>\n            {!bank.depositTokenName.endsWith('LP') && \n              <Typography color=\"textSecondary\">\n                Deposit Fee: <span style={{color: '#040d4e', fontWeight:'700'}}>1%</span>\n              </Typography>\n            }\n          </Box>\n        </CardContent>\n        <CardActions style={{ justifyContent: 'flex-end' }}>\n          <a style={{textDecoration: 'none'}} target=\"_blank\" rel=\"noopener noreferrer\" href={getDepositTokenLink} >\n          <Button color=\"primary\" size=\"small\" variant=\"contained\">\n            {bank.depositTokenName.endsWith('LP') ? 'Add LP' : 'Buy'}\n          </Button>\n          </a>\n          <Button color=\"primary\" size=\"small\" variant=\"contained\" component={Link} to={`/garden/${bank.contract}`}>\n            Stake\n          </Button>\n        </CardActions>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default CemeteryCard;\n"]},"metadata":{},"sourceType":"module"}