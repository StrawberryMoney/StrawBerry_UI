{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ali_9\\\\Desktop\\\\StrawBerry_UI\\\\src\\\\views\\\\Bank\\\\Bank.tsx\";\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useParams } from 'react-router-dom';\nimport { useWallet } from 'use-wallet';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Button, Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport PageHeader from '../../components/PageHeader';\nimport Spacer from '../../components/Spacer';\nimport UnlockWallet from '../../components/UnlockWallet';\nimport Harvest from './components/Harvest';\nimport Stake from './components/Stake';\nimport useBank from '../../hooks/useBank';\nimport useStatsForPool from '../../hooks/useStatsForPool';\nimport useRedeem from '../../hooks/useRedeem';\nimport useTombFinance from '../../hooks/useTombFinance';\nimport { Alert } from '@material-ui/lab';\nconst useStyles = makeStyles(theme => ({\n  gridItem: {\n    height: '100%',\n    [theme.breakpoints.up('md')]: {\n      height: '90px'\n    }\n  }\n}));\n\nconst Bank = () => {\n  useEffect(() => window.scrollTo(0, 0));\n  const classes = useStyles();\n  const {\n    bankId\n  } = useParams();\n  const bank = useBank(bankId);\n  const {\n    account\n  } = useWallet();\n  const {\n    onRedeem\n  } = useRedeem(bank);\n  const statsOnPool = useStatsForPool(bank);\n  return account && bank ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageHeader, {\n    icon: \"\\uD83C\\uDFE6\" // subtitle={`Deposit ${bank?.depositTokenName} and earn ${bank?.earnTokenName}`}\n    ,\n    title: bank === null || bank === void 0 ? void 0 : bank.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, bank.genesisFinished ? /*#__PURE__*/React.createElement(Alert, {\n    variant: \"filled\",\n    severity: \"warning\",\n    style: {\n      maxWidth: \"600px\",\n      marginBottom: \"50px\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Genesis Pools have ENDED. Please withdraw your funds.\") : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justifyContent: \"center\",\n    spacing: 3,\n    style: {\n      marginBottom: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 2,\n    lg: 2,\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"APR\"), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, bank.closedForStaking || bank.genesisFinished ? '0.00' : statsOnPool === null || statsOnPool === void 0 ? void 0 : statsOnPool.yearlyAPR, \"%\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 2,\n    lg: 2,\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Daily APR\"), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, bank.closedForStaking || bank.genesisFinished ? '0.00' : statsOnPool === null || statsOnPool === void 0 ? void 0 : statsOnPool.dailyAPR, \"%\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 2,\n    lg: 2,\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"TVL\"), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"$\", statsOnPool === null || statsOnPool === void 0 ? void 0 : statsOnPool.TVL)))))), /*#__PURE__*/React.createElement(Box, {\n    mt: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StyledBank, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Harvest, {\n    bank: bank,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Spacer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(StyledCardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Stake, {\n    bank: bank,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Spacer, {\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }), bank.depositTokenName.includes('LP') && /*#__PURE__*/React.createElement(LPTokenHelpText, {\n    bank: bank,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 52\n    }\n  }), /*#__PURE__*/React.createElement(Spacer, {\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: onRedeem,\n    color: \"primary\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Claim & Withdraw\")), /*#__PURE__*/React.createElement(Spacer, {\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  })))) : !bank ? /*#__PURE__*/React.createElement(BankNotFound, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(UnlockWallet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  });\n};\n\nconst LPTokenHelpText = _ref => {\n  let {\n    bank\n  } = _ref;\n  const tombFinance = useTombFinance();\n  const tombAddr = tombFinance.TOMB.address;\n  const tshareAddr = tombFinance.TSHARE.address;\n  let pairName;\n  let uniswapUrl;\n\n  if (bank.depositTokenName.startsWith(\"BERRY-AVAX\")) {\n    pairName = 'BERRY-AVAX pair';\n    uniswapUrl = 'https://traderjoexyz.com/pool/AVAX/' + tombAddr;\n  } else if (bank.depositTokenName.startsWith(\"BSHARE-AVAX\")) {\n    pairName = 'BSHARE-AVAX pair';\n    uniswapUrl = 'https://traderjoexyz.com/pool/AVAX/' + tshareAddr;\n  } else {\n    pairName = \"BERRY-BSHARE pair\";\n    uniswapUrl = 'https://traderjoexyz.com/pool/' + tombAddr + '/' + tshareAddr;\n  } //waiting on jun LFG\n\n\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StyledLink, {\n    href: uniswapUrl,\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, `Provide or remove liquidity for ${pairName} on TraderJoe`)));\n};\n\nconst BankNotFound = () => {\n  return /*#__PURE__*/React.createElement(Center, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PageHeader, {\n    icon: \"\\uD83C\\uDFDA\",\n    title: \"Not Found\",\n    subtitle: \"You've hit a bank just robbed by unicorns.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst StyledBank = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\nconst StyledLink = styled.a`\n  font-weight: 700;\n  text-decoration: none;\n  color: ${props => props.theme.color.primary.main};\n`;\nconst StyledCardsWrapper = styled.div`\n  display: flex;\n  width: 600px;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\nconst StyledCardWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 80%;\n  }\n`;\nconst Center = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: center;\n`;\nexport default Bank;","map":{"version":3,"sources":["C:/Users/ali_9/Desktop/StrawBerry_UI/src/views/Bank/Bank.tsx"],"names":["React","useEffect","styled","useParams","useWallet","makeStyles","Box","Button","Card","CardContent","Typography","Grid","PageHeader","Spacer","UnlockWallet","Harvest","Stake","useBank","useStatsForPool","useRedeem","useTombFinance","Alert","useStyles","theme","gridItem","height","breakpoints","up","Bank","window","scrollTo","classes","bankId","bank","account","onRedeem","statsOnPool","name","genesisFinished","maxWidth","marginBottom","marginLeft","marginRight","textAlign","closedForStaking","yearlyAPR","dailyAPR","TVL","depositTokenName","includes","LPTokenHelpText","tombFinance","tombAddr","TOMB","address","tshareAddr","TSHARE","pairName","uniswapUrl","startsWith","BankNotFound","StyledBank","div","StyledLink","a","props","color","primary","main","StyledCardsWrapper","StyledCardWrapper","Center"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport styled from 'styled-components';\n\nimport { useParams } from 'react-router-dom';\nimport { useWallet } from 'use-wallet';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Box, Button, Card, CardContent, Typography, Grid } from '@material-ui/core';\n\nimport PageHeader from '../../components/PageHeader';\nimport Spacer from '../../components/Spacer';\nimport UnlockWallet from '../../components/UnlockWallet';\nimport Harvest from './components/Harvest';\nimport Stake from './components/Stake';\nimport useBank from '../../hooks/useBank';\nimport useStatsForPool from '../../hooks/useStatsForPool';\nimport useRedeem from '../../hooks/useRedeem';\nimport { Bank as BankEntity } from '../../tomb-finance';\nimport useTombFinance from '../../hooks/useTombFinance';\n\nimport { Alert } from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme) => ({\n  gridItem: {\n    height: '100%',\n    [theme.breakpoints.up('md')]: {\n      height: '90px',\n    },\n  },\n}));\n\nconst Bank: React.FC = () => {\n  useEffect(() => window.scrollTo(0, 0));\n  const classes = useStyles();\n  const { bankId } = useParams();\n  const bank = useBank(bankId);\n\n  const { account } = useWallet();\n  const { onRedeem } = useRedeem(bank);\n  const statsOnPool = useStatsForPool(bank);\n\n  return account && bank ? (\n    <>\n      <PageHeader\n        icon=\"🏦\"\n        // subtitle={`Deposit ${bank?.depositTokenName} and earn ${bank?.earnTokenName}`}\n        title={bank?.name}\n      />\n      <Box>\n      {bank.genesisFinished ? \n          <Alert variant=\"filled\" severity=\"warning\" style={{ maxWidth: \"600px\", marginBottom: \"50px\", marginLeft: \"auto\", marginRight: \"auto\" }}>\n            Genesis Pools have ENDED. Please withdraw your funds.\n          </Alert> : <></>}\n        <Grid container justifyContent=\"center\" spacing={3} style={{ marginBottom: '50px' }}>\n          <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\n            <Card className={classes.gridItem}>\n              <CardContent style={{ textAlign: 'center' }}>\n                <Typography>APR</Typography>\n                <Typography>{bank.closedForStaking || bank.genesisFinished ? '0.00' : statsOnPool?.yearlyAPR}%</Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\n            <Card className={classes.gridItem}>\n              <CardContent style={{ textAlign: 'center' }}>\n                <Typography>Daily APR</Typography>\n                <Typography>{bank.closedForStaking || bank.genesisFinished ? '0.00' : statsOnPool?.dailyAPR}%</Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\n            <Card className={classes.gridItem}>\n              <CardContent style={{ textAlign: 'center' }}>\n                <Typography>TVL</Typography>\n                <Typography>${statsOnPool?.TVL}</Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </Box>\n      <Box mt={5}>\n        <StyledBank>\n          <StyledCardsWrapper>\n            <StyledCardWrapper>\n              <Harvest bank={bank} />\n            </StyledCardWrapper>\n            <Spacer />\n            <StyledCardWrapper>{<Stake bank={bank} />}</StyledCardWrapper>\n          </StyledCardsWrapper>\n          <Spacer size=\"lg\" />\n          {bank.depositTokenName.includes('LP') && <LPTokenHelpText bank={bank} />}\n          <Spacer size=\"lg\" />\n          <div>\n            <Button onClick={onRedeem} color=\"primary\" variant=\"contained\">\n              Claim & Withdraw\n            </Button>\n          </div>\n          <Spacer size=\"lg\" />\n        </StyledBank>\n      </Box>\n    </>\n  ) : !bank ? (\n    <BankNotFound />\n  ) : (\n    <UnlockWallet />\n  );\n};\n\nconst LPTokenHelpText: React.FC<{ bank: BankEntity }> = ({ bank }) => {\n  const tombFinance = useTombFinance();\n  const tombAddr = tombFinance.TOMB.address;\n  const tshareAddr = tombFinance.TSHARE.address;\n\n  let pairName: string;\n  let uniswapUrl: string;\n  if (bank.depositTokenName.startsWith(\"BERRY-AVAX\")) {\n    pairName = 'BERRY-AVAX pair';\n    uniswapUrl = 'https://traderjoexyz.com/pool/AVAX/' + tombAddr;\n  } else if (bank.depositTokenName.startsWith(\"BSHARE-AVAX\")) {\n    pairName = 'BSHARE-AVAX pair';\n    uniswapUrl = 'https://traderjoexyz.com/pool/AVAX/' + tshareAddr;\n  } else {\n    pairName = \"BERRY-BSHARE pair\";\n    uniswapUrl = 'https://traderjoexyz.com/pool/' + tombAddr + '/' + tshareAddr;\n  }\n  //waiting on jun LFG\n  return (\n    <Card>\n      <CardContent>\n        <StyledLink href={uniswapUrl} target=\"_blank\">\n          {`Provide or remove liquidity for ${pairName} on TraderJoe`}\n        </StyledLink>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst BankNotFound = () => {\n  return (\n    <Center>\n      <PageHeader icon=\"🏚\" title=\"Not Found\" subtitle=\"You've hit a bank just robbed by unicorns.\" />\n    </Center>\n  );\n};\n\nconst StyledBank = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst StyledLink = styled.a`\n  font-weight: 700;\n  text-decoration: none;\n  color: ${(props) => props.theme.color.primary.main};\n`;\n\nconst StyledCardsWrapper = styled.div`\n  display: flex;\n  width: 600px;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\n\nconst StyledCardWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 80%;\n  }\n`;\n\nconst Center = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default Bank;\n"]},"metadata":{},"sourceType":"module"}