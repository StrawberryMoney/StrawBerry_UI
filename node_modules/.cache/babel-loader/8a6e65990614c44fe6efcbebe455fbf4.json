{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ali_9\\\\Desktop\\\\StrawBerry_UI\\\\src\\\\views\\\\Pit\\\\Pit.tsx\";\nimport React, { useCallback, useMemo } from 'react';\nimport Page from '../../components/Page';\nimport PitImage from '../../assets/img/background.png';\nimport { createGlobalStyle } from 'styled-components';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport { useWallet } from 'use-wallet';\nimport UnlockWallet from '../../components/UnlockWallet';\nimport ExchangeCard from './components/ExchangeCard';\nimport styled from 'styled-components';\nimport Spacer from '../../components/Spacer';\nimport useBondStats from '../../hooks/useBondStats';\nimport useTombFinance from '../../hooks/useTombFinance';\nimport useCashPriceInLastTWAP from '../../hooks/useCashPriceInLastTWAP';\nimport { useTransactionAdder } from '../../state/transactions/hooks';\nimport ExchangeStat from './components/ExchangeStat';\nimport useTokenBalance from '../../hooks/useTokenBalance';\nimport useBondsPurchasable from '../../hooks/useBondsPurchasable';\nimport { getDisplayBalance } from '../../utils/formatBalance';\nimport { BOND_REDEEM_PRICE, BOND_REDEEM_PRICE_BN } from '../../tomb-finance/constants';\nimport { Typography } from '@material-ui/core';\nimport Image from 'material-ui-image';\nimport Bmarket from '../../assets/img/Market.png';\nconst BackgroundImage = createGlobalStyle`\n  body {\n    background: url(${PitImage}) no-repeat !important;\n    background-size: cover !important;\n  }\n`;\nconst StyledLink = styled.a`\n  font-weight: 700;\n  text-decoration: none;\n  family-font: Lobster;\n`;\n\nconst Pit = () => {\n  const {\n    path\n  } = useRouteMatch();\n  const {\n    account\n  } = useWallet();\n  const tombFinance = useTombFinance();\n  const addTransaction = useTransactionAdder();\n  const bondStat = useBondStats();\n  const cashPrice = useCashPriceInLastTWAP();\n  const bondsPurchasable = useBondsPurchasable();\n  const bondBalance = useTokenBalance(tombFinance === null || tombFinance === void 0 ? void 0 : tombFinance.TBOND);\n  const handleBuyBonds = useCallback(async amount => {\n    const tx = await tombFinance.buyBonds(amount);\n    addTransaction(tx, {\n      summary: `Buy ${Number(amount).toFixed(2)} TBOND with ${amount} TOMB`\n    });\n  }, [tombFinance, addTransaction]);\n  const handleRedeemBonds = useCallback(async amount => {\n    const tx = await tombFinance.redeemBonds(amount);\n    addTransaction(tx, {\n      summary: `Redeem ${amount} TBOND`\n    });\n  }, [tombFinance, addTransaction]);\n  const isBondRedeemable = useMemo(() => cashPrice.gt(BOND_REDEEM_PRICE_BN), [cashPrice]);\n  const isBondPurchasable = useMemo(() => Number(bondStat === null || bondStat === void 0 ? void 0 : bondStat.tokenInAvax) < 1.01, [bondStat]);\n  return /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Page, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(BackgroundImage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }), !!account ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Image, {\n    color: \"none\",\n    style: {\n      width: \"235px\",\n      paddingTop: '0px',\n      height: '235px',\n      left: '500px'\n    },\n    src: Bmarket,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textPrimary\",\n    align: \"center\",\n    variant: \"h3\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StyledLink, {\n    style: {\n      color: '#601611'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 10\n    }\n  }, \"Buy & Redeem Market \"))), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StyledLink, {\n    style: {\n      color: '#601611'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), \"\\\"Earn premiums upon redemption\\\"\"), /*#__PURE__*/React.createElement(StyledBond, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(ExchangeCard, {\n    action: \"Purchase\",\n    fromToken: tombFinance.TOMB,\n    fromTokenName: \"BERRY\",\n    toToken: tombFinance.TBOND,\n    toTokenName: \"BBOND\",\n    priceDesc: !isBondPurchasable ? 'BERRY is over peg' : getDisplayBalance(bondsPurchasable, 18, 4) + ' BBOND available for purchase',\n    onExchange: handleBuyBonds,\n    disabled: !bondStat || isBondRedeemable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(StyledStatsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(ExchangeStat, {\n    tokenName: \"BERRY\",\n    description: \"Last-Hour TWAP Price\",\n    price: getDisplayBalance(cashPrice, 18, 4),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Spacer, {\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ExchangeStat, {\n    tokenName: \"BBOND\",\n    description: \"Current Price: (BERRY)^2\",\n    price: Number(bondStat === null || bondStat === void 0 ? void 0 : bondStat.tokenInAvax).toFixed(2) || '-',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(StyledCardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(ExchangeCard, {\n    action: \"Redeem\",\n    fromToken: tombFinance.TBOND,\n    fromTokenName: \"BBOND\",\n    toToken: tombFinance.TOMB,\n    toTokenName: \"BERRY\",\n    priceDesc: `${getDisplayBalance(bondBalance)} BBOND Available in wallet`,\n    onExchange: handleRedeemBonds,\n    disabled: !bondStat || bondBalance.eq(0) || !isBondRedeemable,\n    disabledDescription: !isBondRedeemable ? `Enabled when BERRY > ${BOND_REDEEM_PRICE} AVAX` : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  })))) : /*#__PURE__*/React.createElement(UnlockWallet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 6\n    }\n  })));\n};\n\nconst StyledBond = styled.div`\n  display: flex;\n\tbackground: transparent;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\nconst StyledCardWrapper = styled.div`\n  display: flex;\n  flex: 1;\n\tbackground: transparent;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 80%;\n  }\n`;\nconst StyledStatsWrapper = styled.div`\n  display: flex;\n  flex: 0.8;\n  margin: 0 20px;\n\tbackground: transparent;\n  flex-direction: column;\n\n  @media (max-width: 768px) {\n    width: 80%;\n    margin: 16px 0;\n  }\n`;\nexport default Pit;","map":{"version":3,"sources":["C:/Users/ali_9/Desktop/StrawBerry_UI/src/views/Pit/Pit.tsx"],"names":["React","useCallback","useMemo","Page","PitImage","createGlobalStyle","Route","Switch","useRouteMatch","useWallet","UnlockWallet","ExchangeCard","styled","Spacer","useBondStats","useTombFinance","useCashPriceInLastTWAP","useTransactionAdder","ExchangeStat","useTokenBalance","useBondsPurchasable","getDisplayBalance","BOND_REDEEM_PRICE","BOND_REDEEM_PRICE_BN","Typography","Image","Bmarket","BackgroundImage","StyledLink","a","Pit","path","account","tombFinance","addTransaction","bondStat","cashPrice","bondsPurchasable","bondBalance","TBOND","handleBuyBonds","amount","tx","buyBonds","summary","Number","toFixed","handleRedeemBonds","redeemBonds","isBondRedeemable","gt","isBondPurchasable","tokenInAvax","width","paddingTop","height","left","color","TOMB","eq","StyledBond","div","StyledCardWrapper","StyledStatsWrapper"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo } from 'react';\nimport Page from '../../components/Page';\nimport PitImage from '../../assets/img/background.png';\nimport { createGlobalStyle } from 'styled-components';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport { useWallet } from 'use-wallet';\nimport UnlockWallet from '../../components/UnlockWallet';\nimport PageHeader from '../../components/PageHeader';\nimport ExchangeCard from './components/ExchangeCard';\nimport styled from 'styled-components';\nimport Spacer from '../../components/Spacer';\nimport useBondStats from '../../hooks/useBondStats';\nimport useTombFinance from '../../hooks/useTombFinance';\nimport useCashPriceInLastTWAP from '../../hooks/useCashPriceInLastTWAP';\nimport { useTransactionAdder } from '../../state/transactions/hooks';\nimport ExchangeStat from './components/ExchangeStat';\nimport useTokenBalance from '../../hooks/useTokenBalance';\nimport useBondsPurchasable from '../../hooks/useBondsPurchasable';\nimport { getDisplayBalance } from '../../utils/formatBalance';\nimport { BOND_REDEEM_PRICE, BOND_REDEEM_PRICE_BN } from '../../tomb-finance/constants';\nimport { Typography } from '@material-ui/core';\n\nimport Image from 'material-ui-image';\nimport Bmarket from '../../assets/img/Market.png';\n\n\nconst BackgroundImage = createGlobalStyle`\n  body {\n    background: url(${PitImage}) no-repeat !important;\n    background-size: cover !important;\n  }\n`;\n\nconst StyledLink = styled.a`\n  font-weight: 700;\n  text-decoration: none;\n  family-font: Lobster;\n`;\n\nconst Pit: React.FC = () => {\n\tconst { path } = useRouteMatch();\n\tconst { account } = useWallet();\n\tconst tombFinance = useTombFinance();\n\tconst addTransaction = useTransactionAdder();\n\tconst bondStat = useBondStats();\n\tconst cashPrice = useCashPriceInLastTWAP();\n\tconst bondsPurchasable = useBondsPurchasable();\n\n\tconst bondBalance = useTokenBalance(tombFinance?.TBOND);\n\n\tconst handleBuyBonds = useCallback(\n\t\tasync (amount: string) => {\n\t\t\tconst tx = await tombFinance.buyBonds(amount);\n\t\t\taddTransaction(tx, {\n\t\t\t\tsummary: `Buy ${Number(amount).toFixed(2)} TBOND with ${amount} TOMB`,\n\t\t\t});\n\t\t},\n\t\t[tombFinance, addTransaction],\n\t);\n\n\tconst handleRedeemBonds = useCallback(\n\t\tasync (amount: string) => {\n\t\t\tconst tx = await tombFinance.redeemBonds(amount);\n\t\t\taddTransaction(tx, { summary: `Redeem ${amount} TBOND` });\n\t\t},\n\t\t[tombFinance, addTransaction],\n\t);\n\tconst isBondRedeemable = useMemo(() => cashPrice.gt(BOND_REDEEM_PRICE_BN), [cashPrice]);\n\tconst isBondPurchasable = useMemo(() => Number(bondStat?.tokenInAvax) < 1.01, [bondStat]);\n\n\treturn (\n\t\t<Switch>\n\t\t\t<Page>\n\t\t\t\t<BackgroundImage />\n\t\t\t\t{!!account ? (\n\t\t\t\t\t<>\n\t\t\t\t\t<Image color=\"none\" style={{ width: \"235px\", paddingTop: '0px', height: '235px', left: '500px' }} src={Bmarket} />\n\t\t\t\t\t\t<Typography color=\"textPrimary\" align=\"center\" variant=\"h3\" gutterBottom>\n\t\t\t\t\t\t<b><StyledLink style={{ color: '#601611'  }}>Buy & Redeem Market </StyledLink></b>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Route exact path={path}>\n\t\t\t\t\t\t\t <StyledLink style={{ color: '#601611'  }}></StyledLink>\"Earn premiums upon redemption\" \n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<StyledBond>\n\t\t\t\t\t\t\t<StyledCardWrapper>\n\t\t\t\t\t\t\t\t<ExchangeCard\n\t\t\t\t\t\t\t\t\taction=\"Purchase\"\n\t\t\t\t\t\t\t\t\tfromToken={tombFinance.TOMB}\n\t\t\t\t\t\t\t\t\tfromTokenName=\"BERRY\"\n\t\t\t\t\t\t\t\t\ttoToken={tombFinance.TBOND}\n\t\t\t\t\t\t\t\t\ttoTokenName=\"BBOND\"\n\t\t\t\t\t\t\t\t\tpriceDesc={\n\t\t\t\t\t\t\t\t\t\t!isBondPurchasable\n\t\t\t\t\t\t\t\t\t\t\t? 'BERRY is over peg'\n\t\t\t\t\t\t\t\t\t\t\t: getDisplayBalance(bondsPurchasable, 18, 4) + ' BBOND available for purchase'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tonExchange={handleBuyBonds}\n\t\t\t\t\t\t\t\t\tdisabled={!bondStat || isBondRedeemable}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</StyledCardWrapper>\n\t\t\t\t\t\t\t<StyledStatsWrapper>\n\t\t\t\t\t\t\t\t<ExchangeStat\n\t\t\t\t\t\t\t\t\ttokenName=\"BERRY\"\n\t\t\t\t\t\t\t\t\tdescription=\"Last-Hour TWAP Price\"\n\t\t\t\t\t\t\t\t\tprice={getDisplayBalance(cashPrice, 18, 4)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Spacer size=\"md\" />\n\t\t\t\t\t\t\t\t<ExchangeStat\n\t\t\t\t\t\t\t\t\ttokenName=\"BBOND\"\n\t\t\t\t\t\t\t\t\tdescription=\"Current Price: (BERRY)^2\"\n\t\t\t\t\t\t\t\t\tprice={Number(bondStat?.tokenInAvax).toFixed(2) || '-'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</StyledStatsWrapper>\n\t\t\t\t\t\t\t<StyledCardWrapper>\n\t\t\t\t\t\t\t\t<ExchangeCard\n\t\t\t\t\t\t\t\t\taction=\"Redeem\"\n\t\t\t\t\t\t\t\t\tfromToken={tombFinance.TBOND}\n\t\t\t\t\t\t\t\t\tfromTokenName=\"BBOND\"\n\t\t\t\t\t\t\t\t\ttoToken={tombFinance.TOMB}\n\t\t\t\t\t\t\t\t\ttoTokenName=\"BERRY\"\n\t\t\t\t\t\t\t\t\tpriceDesc={`${getDisplayBalance(bondBalance)} BBOND Available in wallet`}\n\t\t\t\t\t\t\t\t\tonExchange={handleRedeemBonds}\n\t\t\t\t\t\t\t\t\tdisabled={!bondStat || bondBalance.eq(0) || !isBondRedeemable}\n\t\t\t\t\t\t\t\t\tdisabledDescription={!isBondRedeemable ? `Enabled when BERRY > ${BOND_REDEEM_PRICE} AVAX` : null}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</StyledCardWrapper>\n\t\t\t\t\t\t</StyledBond>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<UnlockWallet />\n\t\t\t\t)}\n\t\t\t</Page>\n\t\t</Switch>\n\t);\n};\n\nconst StyledBond = styled.div`\n  display: flex;\n\tbackground: transparent;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\n\nconst StyledCardWrapper = styled.div`\n  display: flex;\n  flex: 1;\n\tbackground: transparent;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 80%;\n  }\n`;\n\nconst StyledStatsWrapper = styled.div`\n  display: flex;\n  flex: 0.8;\n  margin: 0 20px;\n\tbackground: transparent;\n  flex-direction: column;\n\n  @media (max-width: 768px) {\n    width: 80%;\n    margin: 16px 0;\n  }\n`;\n\nexport default Pit;\n"]},"metadata":{},"sourceType":"module"}