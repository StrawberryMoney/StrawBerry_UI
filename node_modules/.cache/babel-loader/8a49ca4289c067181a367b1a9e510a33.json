{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ali_9\\\\Desktop\\\\StrawBerry_UI\\\\src\\\\views\\\\Masonry\\\\components\\\\Stake.tsx\";\nimport React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport { Box, Button, Card, CardContent, Typography } from '@material-ui/core'; // import Button from '../../../components/Button';\n// import Card from '../../../components/Card';\n// import CardContent from '../../../components/CardContent';\n\nimport CardIcon from '../../../components/CardIcon';\nimport { AddIcon, RemoveIcon } from '../../../components/icons';\nimport IconButton from '../../../components/IconButton';\nimport Label from '../../../components/Label';\nimport Value from '../../../components/Value';\nimport useApprove, { ApprovalState } from '../../../hooks/useApprove';\nimport useModal from '../../../hooks/useModal';\nimport useTokenBalance from '../../../hooks/useTokenBalance';\nimport useWithdrawCheck from '../../../hooks/masonry/useWithdrawCheck';\nimport { getDisplayBalance } from '../../../utils/formatBalance';\nimport DepositModal from './DepositModal';\nimport WithdrawModal from './WithdrawModal';\nimport useTombFinance from '../../../hooks/useTombFinance';\nimport ProgressCountdown from './../components/ProgressCountdown';\nimport useStakedBalanceOnMasonry from '../../../hooks/useStakedBalanceOnMasonry';\nimport useStakedTokenPriceInDollars from '../../../hooks/useStakedTokenPriceInDollars';\nimport useUnstakeTimerMasonry from '../../../hooks/masonry/useUnstakeTimerMasonry';\nimport TokenSymbol from '../../../components/TokenSymbol';\nimport useStakeToMasonry from '../../../hooks/useStakeToMasonry';\nimport useWithdrawFromMasonry from '../../../hooks/useWithdrawFromMasonry';\n\nconst Stake = () => {\n  const tombFinance = useTombFinance();\n  const [approveStatus, approve] = useApprove(tombFinance.TSHARE, tombFinance.contracts.Masonry.address);\n  const tokenBalance = useTokenBalance(tombFinance.TSHARE);\n  const stakedBalance = useStakedBalanceOnMasonry();\n  const {\n    from,\n    to\n  } = useUnstakeTimerMasonry();\n  const stakedTokenPriceInDollars = useStakedTokenPriceInDollars('TSHARE', tombFinance.TSHARE);\n  const tokenPriceInDollars = useMemo(() => stakedTokenPriceInDollars ? (Number(stakedTokenPriceInDollars) * Number(getDisplayBalance(stakedBalance))).toFixed(2).toString() : null, [stakedTokenPriceInDollars, stakedBalance]); // const isOldBoardroomMember = boardroomVersion !== 'latest';\n\n  const {\n    onStake\n  } = useStakeToMasonry();\n  const {\n    onWithdraw\n  } = useWithdrawFromMasonry();\n  const canWithdrawFromMasonry = useWithdrawCheck();\n  const [onPresentDeposit, onDismissDeposit] = useModal( /*#__PURE__*/React.createElement(DepositModal, {\n    max: tokenBalance,\n    onConfirm: value => {\n      onStake(value);\n      onDismissDeposit();\n    },\n    tokenName: 'BSHARE',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 3\n    }\n  }));\n  const [onPresentWithdraw, onDismissWithdraw] = useModal( /*#__PURE__*/React.createElement(WithdrawModal, {\n    max: stakedBalance,\n    onConfirm: value => {\n      onWithdraw(value);\n      onDismissWithdraw();\n    },\n    tokenName: 'BSHARE',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 3\n    }\n  }));\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardContentInner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(TokenSymbol, {\n    symbol: \"TSHARE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Value, {\n    value: getDisplayBalance(stakedBalance),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    text: `â‰ˆ $${tokenPriceInDollars}`,\n    color: \"#000\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    text: 'BSHARE Staked',\n    color: \"#000\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 8\n    }\n  })), /*#__PURE__*/React.createElement(StyledCardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, approveStatus !== ApprovalState.APPROVED ? /*#__PURE__*/React.createElement(Button, {\n    disabled: approveStatus !== ApprovalState.NOT_APPROVED,\n    variant: \"contained\",\n    color: \"primary\",\n    style: {\n      marginTop: '20px'\n    },\n    onClick: approve,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"Approve BSHARE\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, {\n    disabled: !canWithdrawFromMasonry,\n    onClick: onPresentWithdraw,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(RemoveIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(StyledActionSpacer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: onPresentDeposit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }))))))), /*#__PURE__*/React.createElement(Box, {\n    mt: 2,\n    style: {\n      color: '#FFF'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 4\n    }\n  }, canWithdrawFromMasonry ? '' : /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 8\n    }\n  }, \"Withdraw possible in\"), /*#__PURE__*/React.createElement(ProgressCountdown, {\n    hideBar: true,\n    base: from,\n    deadline: to,\n    description: \"Withdraw available in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 8\n    }\n  })))));\n};\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 28px;\n  width: 100%;\n`;\nconst StyledActionSpacer = styled.div`\n  height: ${props => props.theme.spacing[4]}px;\n  width: ${props => props.theme.spacing[4]}px;\n`;\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\nexport default Stake;","map":{"version":3,"sources":["C:/Users/ali_9/Desktop/StrawBerry_UI/src/views/Masonry/components/Stake.tsx"],"names":["React","useMemo","styled","Box","Button","Card","CardContent","Typography","CardIcon","AddIcon","RemoveIcon","IconButton","Label","Value","useApprove","ApprovalState","useModal","useTokenBalance","useWithdrawCheck","getDisplayBalance","DepositModal","WithdrawModal","useTombFinance","ProgressCountdown","useStakedBalanceOnMasonry","useStakedTokenPriceInDollars","useUnstakeTimerMasonry","TokenSymbol","useStakeToMasonry","useWithdrawFromMasonry","Stake","tombFinance","approveStatus","approve","TSHARE","contracts","Masonry","address","tokenBalance","stakedBalance","from","to","stakedTokenPriceInDollars","tokenPriceInDollars","Number","toFixed","toString","onStake","onWithdraw","canWithdrawFromMasonry","onPresentDeposit","onDismissDeposit","value","onPresentWithdraw","onDismissWithdraw","APPROVED","NOT_APPROVED","marginTop","color","textAlign","StyledCardHeader","div","StyledCardActions","StyledActionSpacer","props","theme","spacing","StyledCardContentInner"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\nimport styled from 'styled-components';\n\nimport { Box, Button, Card, CardContent, Typography } from '@material-ui/core';\n\n// import Button from '../../../components/Button';\n// import Card from '../../../components/Card';\n// import CardContent from '../../../components/CardContent';\nimport CardIcon from '../../../components/CardIcon';\nimport { AddIcon, RemoveIcon } from '../../../components/icons';\nimport IconButton from '../../../components/IconButton';\nimport Label from '../../../components/Label';\nimport Value from '../../../components/Value';\n\nimport useApprove, { ApprovalState } from '../../../hooks/useApprove';\nimport useModal from '../../../hooks/useModal';\nimport useTokenBalance from '../../../hooks/useTokenBalance';\nimport useWithdrawCheck from '../../../hooks/masonry/useWithdrawCheck';\n\nimport { getDisplayBalance } from '../../../utils/formatBalance';\n\nimport DepositModal from './DepositModal';\nimport WithdrawModal from './WithdrawModal';\nimport useTombFinance from '../../../hooks/useTombFinance';\nimport ProgressCountdown from './../components/ProgressCountdown';\nimport useStakedBalanceOnMasonry from '../../../hooks/useStakedBalanceOnMasonry';\nimport useStakedTokenPriceInDollars from '../../../hooks/useStakedTokenPriceInDollars';\nimport useUnstakeTimerMasonry from '../../../hooks/masonry/useUnstakeTimerMasonry';\nimport TokenSymbol from '../../../components/TokenSymbol';\nimport useStakeToMasonry from '../../../hooks/useStakeToMasonry';\nimport useWithdrawFromMasonry from '../../../hooks/useWithdrawFromMasonry';\n\nconst Stake: React.FC = () => {\n\tconst tombFinance = useTombFinance();\n\tconst [approveStatus, approve] = useApprove(tombFinance.TSHARE, tombFinance.contracts.Masonry.address);\n\n\tconst tokenBalance = useTokenBalance(tombFinance.TSHARE);\n\tconst stakedBalance = useStakedBalanceOnMasonry();\n\tconst { from, to } = useUnstakeTimerMasonry();\n\n\tconst stakedTokenPriceInDollars = useStakedTokenPriceInDollars('TSHARE', tombFinance.TSHARE);\n\tconst tokenPriceInDollars = useMemo(\n\t\t() =>\n\t\t\tstakedTokenPriceInDollars\n\t\t\t\t? (Number(stakedTokenPriceInDollars) * Number(getDisplayBalance(stakedBalance))).toFixed(2).toString()\n\t\t\t\t: null,\n\t\t[stakedTokenPriceInDollars, stakedBalance],\n\t);\n\t// const isOldBoardroomMember = boardroomVersion !== 'latest';\n\n\tconst { onStake } = useStakeToMasonry();\n\tconst { onWithdraw } = useWithdrawFromMasonry();\n\tconst canWithdrawFromMasonry = useWithdrawCheck();\n\n\tconst [onPresentDeposit, onDismissDeposit] = useModal(\n\t\t<DepositModal\n\t\t\tmax={tokenBalance}\n\t\t\tonConfirm={(value) => {\n\t\t\t\tonStake(value);\n\t\t\t\tonDismissDeposit();\n\t\t\t}}\n\t\t\ttokenName={'BSHARE'}\n\t\t/>,\n\t);\n\n\tconst [onPresentWithdraw, onDismissWithdraw] = useModal(\n\t\t<WithdrawModal\n\t\t\tmax={stakedBalance}\n\t\t\tonConfirm={(value) => {\n\t\t\t\tonWithdraw(value);\n\t\t\t\tonDismissWithdraw();\n\t\t\t}}\n\t\t\ttokenName={'BSHARE'}\n\t\t/>,\n\t);\n\n\treturn (\n\t\t<Box>\n\t\t\t<Card>\n\t\t\t\t<CardContent>\n\t\t\t\t\t<StyledCardContentInner>\n\t\t\t\t\t\t<StyledCardHeader>\n\t\t\t\t\t\t\t<CardIcon>\n\t\t\t\t\t\t\t\t<TokenSymbol symbol=\"TSHARE\" />\n\t\t\t\t\t\t\t</CardIcon>\n\t\t\t\t\t\t\t<Value value={getDisplayBalance(stakedBalance)} />\n\t\t\t\t\t\t\t<Label text={`â‰ˆ $${tokenPriceInDollars}`} color=\"#000\" />\n\t\t\t\t\t\t\t<Label text={'BSHARE Staked'} color=\"#000\" />\n\t\t\t\t\t\t</StyledCardHeader>\n\t\t\t\t\t\t<StyledCardActions>\n\t\t\t\t\t\t\t{approveStatus !== ApprovalState.APPROVED ? (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tdisabled={approveStatus !== ApprovalState.NOT_APPROVED}\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tstyle={{ marginTop: '20px' }}\n\t\t\t\t\t\t\t\t\tonClick={approve}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tApprove BSHARE\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<IconButton disabled={!canWithdrawFromMasonry} onClick={onPresentWithdraw}>\n\t\t\t\t\t\t\t\t\t\t<RemoveIcon />\n\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t<StyledActionSpacer />\n\t\t\t\t\t\t\t\t\t<IconButton onClick={onPresentDeposit}>\n\t\t\t\t\t\t\t\t\t\t<AddIcon />\n\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</StyledCardActions>\n\t\t\t\t\t</StyledCardContentInner>\n\t\t\t\t</CardContent>\n\t\t\t</Card>\n\t\t\t<Box mt={2} style={{ color: '#FFF' }}>\n\t\t\t\t{canWithdrawFromMasonry ? (\n\t\t\t\t\t''\n\t\t\t\t) : (\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<Typography style={{ textAlign: 'center' }}>Withdraw possible in</Typography>\n\t\t\t\t\t\t\t<ProgressCountdown hideBar={true} base={from} deadline={to} description=\"Withdraw available in\" />\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t</Card>\n\t\t\t\t)}\n\t\t\t</Box>\n\t\t</Box>\n\t);\n};\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 28px;\n  width: 100%;\n`;\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`;\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport default Stake;\n"]},"metadata":{},"sourceType":"module"}