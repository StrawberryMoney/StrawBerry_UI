{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { BigNumber } from 'ethers';\nimport useTombFinance from './useTombFinance';\nimport useRefresh from './useRefresh';\n\nconst useTotalStakedOnMasonry = () => {\n  const [totalStaked, setTotalStaked] = useState(BigNumber.from(0));\n  const tombFinance = useTombFinance();\n  const {\n    slowRefresh\n  } = useRefresh();\n  const isUnlocked = tombFinance === null || tombFinance === void 0 ? void 0 : tombFinance.isUnlocked;\n  useEffect(() => {\n    async function fetchTotalStaked() {\n      try {\n        setTotalStaked(await tombFinance.getTotalStakedInMasonry());\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    if (isUnlocked) {\n      fetchTotalStaked();\n    }\n  }, [isUnlocked, slowRefresh, tombFinance]);\n  return totalStaked;\n};\n\nexport default useTotalStakedOnMasonry;","map":{"version":3,"sources":["C:/Users/ali_9/Desktop/StrawBerry_UI/src/hooks/useTotalStakedOnMasonry.ts"],"names":["useEffect","useState","BigNumber","useTombFinance","useRefresh","useTotalStakedOnMasonry","totalStaked","setTotalStaked","from","tombFinance","slowRefresh","isUnlocked","fetchTotalStaked","getTotalStakedInMasonry","err","console","error"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,uBAAuB,GAAG,MAAM;AACpC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAACC,SAAS,CAACM,IAAV,CAAe,CAAf,CAAD,CAA9C;AACA,QAAMC,WAAW,GAAGN,cAAc,EAAlC;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAkBN,UAAU,EAAlC;AACA,QAAMO,UAAU,GAAGF,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAEE,UAAhC;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeY,gBAAf,GAAkC;AAChC,UAAI;AACFL,QAAAA,cAAc,CAAC,MAAME,WAAW,CAACI,uBAAZ,EAAP,CAAd;AACD,OAFD,CAEE,OAAMC,GAAN,EAAW;AACXC,QAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF;;AACD,QAAIH,UAAJ,EAAgB;AACfC,MAAAA,gBAAgB;AAChB;AACF,GAXQ,EAWN,CAACD,UAAD,EAAaD,WAAb,EAA0BD,WAA1B,CAXM,CAAT;AAaA,SAAOH,WAAP;AACD,CApBD;;AAsBA,eAAeD,uBAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { BigNumber } from 'ethers';\nimport useTombFinance from './useTombFinance';\nimport useRefresh from './useRefresh';\n\nconst useTotalStakedOnMasonry = () => {\n  const [totalStaked, setTotalStaked] = useState(BigNumber.from(0));\n  const tombFinance = useTombFinance();\n  const { slowRefresh } = useRefresh();\n  const isUnlocked = tombFinance?.isUnlocked;\n\n  useEffect(() => {\n    async function fetchTotalStaked() {\n      try {\n        setTotalStaked(await tombFinance.getTotalStakedInMasonry());\n      } catch(err) {\n        console.error(err);\n      }\n    }\n    if (isUnlocked) {\n     fetchTotalStaked();\n    }\n  }, [isUnlocked, slowRefresh, tombFinance]);\n\n  return totalStaked;\n};\n\nexport default useTotalStakedOnMasonry;\n"]},"metadata":{},"sourceType":"module"}