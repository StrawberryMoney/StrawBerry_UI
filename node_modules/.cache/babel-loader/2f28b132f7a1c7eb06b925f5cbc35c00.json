{"ast":null,"code":"import { useCallback } from 'react';\nimport { useAddPopup } from '../state/application/hooks';\nconst DEFAULT_ERROR_MSG = 'Unexpected error is occurred.';\n\nfunction useCatchError() {\n  const addPopup = useAddPopup();\n  return useCallback(function (promise) {\n    let message = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_ERROR_MSG;\n    promise.catch(err => {\n      if (err.message.includes('User denied')) {\n        // User denied transaction signature on MetaMask.\n        return;\n      }\n\n      console.error(`Uncaught exception: ${err.stack}`);\n      addPopup({\n        error: {\n          message,\n          stack: err.stack\n        }\n      });\n    });\n  }, [addPopup]);\n}\n\nexport default useCatchError;","map":{"version":3,"sources":["C:/Users/ali_9/Desktop/StrawBerry_UI/src/hooks/useCatchError.ts"],"names":["useCallback","useAddPopup","DEFAULT_ERROR_MSG","useCatchError","addPopup","promise","message","catch","err","includes","console","error","stack"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,4BAA5B;AAEA,MAAMC,iBAAiB,GAAG,+BAA1B;;AAEA,SAASC,aAAT,GAA4E;AAC1E,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AAEA,SAAOD,WAAW,CAChB,UAACK,OAAD,EAAwD;AAAA,QAAhCC,OAAgC,uEAAtBJ,iBAAsB;AACtDG,IAAAA,OAAO,CAACE,KAAR,CAAeC,GAAD,IAAS;AACrB,UAAIA,GAAG,CAACF,OAAJ,CAAYG,QAAZ,CAAqB,aAArB,CAAJ,EAAyC;AACvC;AACA;AACD;;AACDC,MAAAA,OAAO,CAACC,KAAR,CAAe,uBAAsBH,GAAG,CAACI,KAAM,EAA/C;AACAR,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,KAAK,EAAE;AAAEL,UAAAA,OAAF;AAAWM,UAAAA,KAAK,EAAEJ,GAAG,CAACI;AAAtB;AAAT,OAAD,CAAR;AACD,KAPD;AAQD,GAVe,EAWhB,CAACR,QAAD,CAXgB,CAAlB;AAaD;;AAED,eAAeD,aAAf","sourcesContent":["import { useCallback } from 'react';\nimport { useAddPopup } from '../state/application/hooks';\n\nconst DEFAULT_ERROR_MSG = 'Unexpected error is occurred.';\n\nfunction useCatchError(): (promise: Promise<any>, message?: string) => void {\n  const addPopup = useAddPopup();\n\n  return useCallback(\n    (promise: Promise<any>, message = DEFAULT_ERROR_MSG) => {\n      promise.catch((err) => {\n        if (err.message.includes('User denied')) {\n          // User denied transaction signature on MetaMask.\n          return;\n        }\n        console.error(`Uncaught exception: ${err.stack}`);\n        addPopup({ error: { message, stack: err.stack } });\n      });\n    },\n    [addPopup],\n  );\n}\n\nexport default useCatchError;\n"]},"metadata":{},"sourceType":"module"}