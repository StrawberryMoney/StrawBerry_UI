{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport useTombFinance from './useTombFinance';\nimport useRefresh from './useRefresh';\n\nconst useTotalValueLocked = () => {\n  const [totalValueLocked, setTotalValueLocked] = useState(0);\n  const {\n    slowRefresh\n  } = useRefresh();\n  const tombFinance = useTombFinance();\n  useEffect(() => {\n    async function fetchTVL() {\n      try {\n        setTotalValueLocked(await tombFinance.getTotalValueLocked());\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    fetchTVL();\n  }, [setTotalValueLocked, tombFinance, slowRefresh]);\n  return totalValueLocked;\n};\n\nexport default useTotalValueLocked;","map":{"version":3,"sources":["C:/Users/ali_9/Desktop/StrawBerry_UI/src/hooks/useTotalValueLocked.ts"],"names":["useEffect","useState","useTombFinance","useRefresh","useTotalValueLocked","totalValueLocked","setTotalValueLocked","slowRefresh","tombFinance","fetchTVL","getTotalValueLocked","err","console","error"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAChC,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CL,QAAQ,CAAS,CAAT,CAAxD;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAkBJ,UAAU,EAAlC;AACA,QAAMK,WAAW,GAAGN,cAAc,EAAlC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeS,QAAf,GAA0B;AACxB,UAAI;AACFH,QAAAA,mBAAmB,CAAC,MAAME,WAAW,CAACE,mBAAZ,EAAP,CAAnB;AACD,OAFD,CAGA,OAAMC,GAAN,EAAU;AACRC,QAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF;;AACDF,IAAAA,QAAQ;AACT,GAVQ,EAUN,CAACH,mBAAD,EAAsBE,WAAtB,EAAmCD,WAAnC,CAVM,CAAT;AAYA,SAAOF,gBAAP;AACD,CAlBD;;AAoBA,eAAeD,mBAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport useTombFinance from './useTombFinance';\nimport useRefresh from './useRefresh';\n\nconst useTotalValueLocked = () => {\n  const [totalValueLocked, setTotalValueLocked] = useState<Number>(0);\n  const { slowRefresh } = useRefresh();\n  const tombFinance = useTombFinance();\n\n  useEffect(() => {\n    async function fetchTVL() {\n      try {\n        setTotalValueLocked(await tombFinance.getTotalValueLocked());\n      }\n      catch(err){\n        console.error(err);\n      }\n    }\n    fetchTVL();\n  }, [setTotalValueLocked, tombFinance, slowRefresh]);\n\n  return totalValueLocked;\n};\n\nexport default useTotalValueLocked;\n"]},"metadata":{},"sourceType":"module"}