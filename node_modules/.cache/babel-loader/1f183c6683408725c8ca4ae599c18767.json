{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ali_9\\\\Desktop\\\\StrawBerry_UI\\\\src\\\\views\\\\Masonry\\\\Masonry.js\";\nimport React, { useMemo } from 'react';\nimport { useWallet } from 'use-wallet';\nimport moment from 'moment';\nimport styled from 'styled-components';\nimport Spacer from '../../components/Spacer';\nimport Harvest from './components/Harvest';\nimport Stake from './components/Stake';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Card, CardContent, Button, Typography, Grid } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport Image from 'material-ui-image';\nimport Smoothies from '../../assets/img/Smoothie.png';\nimport UnlockWallet from '../../components/UnlockWallet';\nimport Page from '../../components/Page';\nimport useRedeemOnMasonry from '../../hooks/useRedeemOnMasonry';\nimport useStakedBalanceOnMasonry from '../../hooks/useStakedBalanceOnMasonry';\nimport { getDisplayBalance } from '../../utils/formatBalance';\nimport useCurrentEpoch from '../../hooks/useCurrentEpoch';\nimport useFetchMasonryAPR from '../../hooks/useFetchMasonryAPR';\nimport useCashPriceInEstimatedTWAP from '../../hooks/useCashPriceInEstimatedTWAP';\nimport useTreasuryAllocationTimes from '../../hooks/useTreasuryAllocationTimes';\nimport useTotalStakedOnMasonry from '../../hooks/useTotalStakedOnMasonry';\nimport useClaimRewardCheck from '../../hooks/masonry/useClaimRewardCheck';\nimport useWithdrawCheck from '../../hooks/masonry/useWithdrawCheck';\nimport ProgressCountdown from './components/ProgressCountdown';\nimport MasonryImage from '../../assets/img/background.png';\nimport { createGlobalStyle } from 'styled-components';\nconst StyledLink = styled.a`\n  font-weight: 700;\n  text-decoration: none;\n  family-font: Lobster;\n`;\nconst BackgroundImage = createGlobalStyle`\n  body, html {\n    background: url(${MasonryImage}) no-repeat !important;\n    background-size: cover !important;\n  }\n`;\nconst useStyles = makeStyles(theme => ({\n  gridItem: {\n    height: '100%',\n    [theme.breakpoints.up('md')]: {\n      height: '90px'\n    }\n  }\n}));\n\nconst Masonry = () => {\n  const classes = useStyles();\n  const {\n    account\n  } = useWallet();\n  const {\n    onRedeem\n  } = useRedeemOnMasonry();\n  const stakedBalance = useStakedBalanceOnMasonry();\n  const currentEpoch = useCurrentEpoch();\n  const cashStat = useCashPriceInEstimatedTWAP();\n  const totalStaked = useTotalStakedOnMasonry();\n  const masonryAPR = useFetchMasonryAPR();\n  const canClaimReward = useClaimRewardCheck();\n  const canWithdraw = useWithdrawCheck();\n  const scalingFactor = useMemo(() => cashStat ? Number(cashStat.priceInDollars).toFixed(4) : null, [cashStat]);\n  const {\n    to\n  } = useTreasuryAllocationTimes();\n  return /*#__PURE__*/React.createElement(Page, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BackgroundImage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), !!account ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Image, {\n    color: \"none\",\n    style: {\n      width: \"235px\",\n      paddingTop: '0px',\n      height: '235px',\n      left: '500px'\n    },\n    src: Smoothies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textPrimary\",\n    align: \"center\",\n    variant: \"h3\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StyledLink, {\n    style: {\n      color: '#601611'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 14\n    }\n  }, \" Smoothies\"))), /*#__PURE__*/React.createElement(Box, {\n    mt: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justifyContent: \"center\",\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 2,\n    lg: 2,\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(StyledLink, {\n    style: {\n      color: '#601611'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 68\n    }\n  }, \"Next Epoch\"))), /*#__PURE__*/React.createElement(ProgressCountdown, {\n    base: moment().toDate(),\n    hideBar: true,\n    deadline: to,\n    description: \"Next Epoch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 2,\n    lg: 2,\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(StyledLink, {\n    style: {\n      color: '#601611'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 36\n    }\n  }, \"Current Epoch\"))), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, Number(currentEpoch))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 2,\n    lg: 2,\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 20\n    }\n  }, \" \", /*#__PURE__*/React.createElement(StyledLink, {\n    style: {\n      color: '#601611'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 24\n    }\n  }, \"BERRY Price\", /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 77\n    }\n  }, \"(TWAP)\")))), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, scalingFactor)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 2,\n    lg: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(StyledLink, {\n    style: {\n      color: '#601611'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 36\n    }\n  }, \"BSHARE Staked\"))), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, getDisplayBalance(totalStaked)))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justifyContent: \"center\",\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 2,\n    lg: 2,\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(StyledLink, {\n    style: {\n      color: '#601611'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 36\n    }\n  }, \"APR\"))), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, masonryAPR.toFixed(2), \"%\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 2,\n    lg: 2,\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(StyledLink, {\n    style: {\n      color: '#601611'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 36\n    }\n  }, \"Daily\"))), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, (masonryAPR / 365).toFixed(2), \"%\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 2,\n    lg: 2,\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(StyledLink, {\n    style: {\n      color: '#601611'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 36\n    }\n  }, \"Epoch\"))), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, (masonryAPR / 365 / 4).toFixed(2), \"%\"))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mt: 6,\n    style: {\n      width: '800px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    variant: \"filled\",\n    severity: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, \"Staked BSHAREs can only be withdrawn after 2 epochs (12 hours) since deposit. Any time tokens are harvested, deposited, or withdrawn, the lockup timer gets reset.\"))), /*#__PURE__*/React.createElement(Box, {\n    mt: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StyledBoardroom, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Harvest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Spacer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(StyledCardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Stake, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  })))))), /*#__PURE__*/React.createElement(Box, {\n    mt: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justifyContent: \"center\",\n    spacing: 3,\n    mt: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: stakedBalance.eq(0) || !canWithdraw && !canClaimReward,\n    onClick: onRedeem,\n    color: \"primary\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }, \"Claim and Withdraw\")))) : /*#__PURE__*/React.createElement(UnlockWallet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst StyledBoardroom = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\nconst StyledCardsWrapper = styled.div`\n  display: flex;\n  width: 800px;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\nconst StyledCardWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 80%;\n  }\n`;\nexport default Masonry;","map":{"version":3,"sources":["C:/Users/ali_9/Desktop/StrawBerry_UI/src/views/Masonry/Masonry.js"],"names":["React","useMemo","useWallet","moment","styled","Spacer","Harvest","Stake","makeStyles","Box","Card","CardContent","Button","Typography","Grid","Alert","Image","Smoothies","UnlockWallet","Page","useRedeemOnMasonry","useStakedBalanceOnMasonry","getDisplayBalance","useCurrentEpoch","useFetchMasonryAPR","useCashPriceInEstimatedTWAP","useTreasuryAllocationTimes","useTotalStakedOnMasonry","useClaimRewardCheck","useWithdrawCheck","ProgressCountdown","MasonryImage","createGlobalStyle","StyledLink","a","BackgroundImage","useStyles","theme","gridItem","height","breakpoints","up","Masonry","classes","account","onRedeem","stakedBalance","currentEpoch","cashStat","totalStaked","masonryAPR","canClaimReward","canWithdraw","scalingFactor","Number","priceInDollars","toFixed","to","width","paddingTop","left","color","textAlign","toDate","eq","StyledBoardroom","div","StyledCardsWrapper","StyledCardWrapper"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\nimport { useWallet } from 'use-wallet';\nimport moment from 'moment';\nimport styled from 'styled-components';\nimport Spacer from '../../components/Spacer';\nimport Harvest from './components/Harvest';\nimport Stake from './components/Stake';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Box, Card, CardContent, Button, Typography, Grid } from '@material-ui/core';\n\nimport { Alert } from '@material-ui/lab';\n\nimport Image from 'material-ui-image';\nimport Smoothies from '../../assets/img/Smoothie.png';\n\n\nimport UnlockWallet from '../../components/UnlockWallet';\nimport Page from '../../components/Page';\n\nimport useRedeemOnMasonry from '../../hooks/useRedeemOnMasonry';\nimport useStakedBalanceOnMasonry from '../../hooks/useStakedBalanceOnMasonry';\nimport { getDisplayBalance } from '../../utils/formatBalance';\nimport useCurrentEpoch from '../../hooks/useCurrentEpoch';\nimport useFetchMasonryAPR from '../../hooks/useFetchMasonryAPR';\n\n\n\nimport useCashPriceInEstimatedTWAP from '../../hooks/useCashPriceInEstimatedTWAP';\nimport useTreasuryAllocationTimes from '../../hooks/useTreasuryAllocationTimes';\nimport useTotalStakedOnMasonry from '../../hooks/useTotalStakedOnMasonry';\nimport useClaimRewardCheck from '../../hooks/masonry/useClaimRewardCheck';\nimport useWithdrawCheck from '../../hooks/masonry/useWithdrawCheck';\nimport ProgressCountdown from './components/ProgressCountdown';\nimport MasonryImage from '../../assets/img/background.png';\nimport { createGlobalStyle } from 'styled-components';\n\n\nconst StyledLink = styled.a`\n  font-weight: 700;\n  text-decoration: none;\n  family-font: Lobster;\n`;\n\nconst BackgroundImage = createGlobalStyle`\n  body, html {\n    background: url(${MasonryImage}) no-repeat !important;\n    background-size: cover !important;\n  }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  gridItem: {\n    height: '100%',\n    [theme.breakpoints.up('md')]: {\n      height: '90px',\n    },\n  },\n}));\n\nconst Masonry = () => {\n  const classes = useStyles();\n  const { account } = useWallet();\n  const { onRedeem } = useRedeemOnMasonry();\n  const stakedBalance = useStakedBalanceOnMasonry();\n  const currentEpoch = useCurrentEpoch();\n  const cashStat = useCashPriceInEstimatedTWAP();\n  const totalStaked = useTotalStakedOnMasonry();\n  const masonryAPR = useFetchMasonryAPR();\n  const canClaimReward = useClaimRewardCheck();\n  const canWithdraw = useWithdrawCheck();\n  const scalingFactor = useMemo(() => (cashStat ? Number(cashStat.priceInDollars).toFixed(4) : null), [cashStat]);\n  const { to } = useTreasuryAllocationTimes();\n\n  return (\n    <Page>\n      <BackgroundImage />\n      {!!account ? (\n        <>\n        <Image color=\"none\" style={{ width: \"235px\", paddingTop: '0px', height: '235px', left: '500px' }} src={Smoothies} />\n          <Typography color=\"textPrimary\" align=\"center\" variant=\"h3\" gutterBottom>\n          <b><StyledLink style={{ color: '#601611'  }}> Smoothies</StyledLink></b>\n          </Typography>\n          <Box mt={5}>\n            <Grid container justifyContent=\"center\" spacing={3}>\n              <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\n                <Card className={classes.gridItem}>\n                  <CardContent>\n                    <Typography style={{ textAlign: 'center' }}><b><StyledLink style={{ color: '#601611'  }}>Next Epoch</StyledLink></b></Typography>\n                    <ProgressCountdown base={moment().toDate()} hideBar={true} deadline={to} description=\"Next Epoch\" />\n                  </CardContent>\n                </Card>\n              </Grid>\n              <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\n                <Card className={classes.gridItem}>\n                  <CardContent align=\"center\">\n                    <Typography><b><StyledLink style={{ color: '#601611'  }}>Current Epoch</StyledLink></b></Typography>\n                    <Typography>{Number(currentEpoch)}</Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n              <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\n                <Card className={classes.gridItem}>\n                  <CardContent align=\"center\">\n                    <Typography>\n                   <b> <StyledLink style={{ color: '#601611'  }}>BERRY Price<small>(TWAP)</small></StyledLink></b>\n                    </Typography>\n                    <Typography>{scalingFactor}</Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n              <Grid item xs={12} md={2} lg={2}>\n                <Card className={classes.gridItem}>\n                  <CardContent align=\"center\">\n                    <Typography><b><StyledLink style={{ color: '#601611'  }}>BSHARE Staked</StyledLink></b></Typography>\n                    <Typography>{getDisplayBalance(totalStaked)}</Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n            </Grid>\n            <Grid container justifyContent=\"center\" spacing={3}>\n              <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\n                <Card className={classes.gridItem}>\n                  <CardContent align=\"center\">\n                    <Typography><b><StyledLink style={{ color: '#601611'  }}>APR</StyledLink></b></Typography>\n                    <Typography>{masonryAPR.toFixed(2)}%</Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n              <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\n                <Card className={classes.gridItem}>\n                  <CardContent align=\"center\">\n                    <Typography><b><StyledLink style={{ color: '#601611'  }}>Daily</StyledLink></b></Typography>\n                    <Typography>{(masonryAPR / 365).toFixed(2)}%</Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n              <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\n                <Card className={classes.gridItem}>\n                  <CardContent align=\"center\">\n                    <Typography><b><StyledLink style={{ color: '#601611'  }}>Epoch</StyledLink></b></Typography>\n                    <Typography>{(masonryAPR / 365 / 4).toFixed(2)}%</Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n            </Grid>\n\n            <Grid container justifyContent=\"center\">\n              <Box mt={6} style={{width:'800px'}}>\n                <Alert variant=\"filled\" severity=\"warning\">\n                  Staked BSHAREs can only be withdrawn after 2 epochs (12 hours) since deposit. Any time tokens are harvested, deposited, or withdrawn, the lockup timer gets reset.\n                </Alert>\n              </Box>\n            </Grid>\n\n            <Box mt={3}>\n              <StyledBoardroom>\n                <StyledCardsWrapper>\n                  <StyledCardWrapper>\n                    <Harvest />\n                  </StyledCardWrapper>\n                  <Spacer />\n                  <StyledCardWrapper>\n                    <Stake />\n                  </StyledCardWrapper>\n                </StyledCardsWrapper>\n              </StyledBoardroom>\n            </Box>\n\n            {/* <Grid container justify=\"center\" spacing={3}>\n            <Grid item xs={4}>\n              <Card>\n                <CardContent align=\"center\">\n                  <Typography>Rewards</Typography>\n\n                </CardContent>\n                <CardActions style={{justifyContent: 'center'}}>\n                  <Button color=\"primary\" variant=\"outlined\">Claim Reward</Button>\n                </CardActions>\n                <CardContent align=\"center\">\n                  <Typography>Claim Countdown</Typography>\n                  <Typography>00:00:00</Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={4}>\n              <Card>\n                <CardContent align=\"center\">\n                  <Typography>Stakings</Typography>\n                  <Typography>{getDisplayBalance(stakedBalance)}</Typography>\n                </CardContent>\n                <CardActions style={{justifyContent: 'center'}}>\n                  <Button>+</Button>\n                  <Button>-</Button>\n                </CardActions>\n              </Card>\n            </Grid>\n          </Grid> */}\n          </Box>\n\n          <Box mt={5}>\n            <Grid container justifyContent=\"center\" spacing={3} mt={10}>\n              <Button\n                disabled={stakedBalance.eq(0) || (!canWithdraw && !canClaimReward)}\n                onClick={onRedeem}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Claim and Withdraw\n              </Button>\n            </Grid>\n          </Box>\n        </>\n      ) : (\n        <UnlockWallet />\n      )}\n    </Page>\n  );\n};\n\nconst StyledBoardroom = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst StyledCardsWrapper = styled.div`\n  display: flex;\n  width: 800px;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\n\nconst StyledCardWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 80%;\n  }\n`;\n\nexport default Masonry;\n"]},"metadata":{},"sourceType":"module"}