{"ast":null,"code":"import { useCallback } from 'react';\nimport { useTransactionAdder } from '../state/transactions/hooks';\nimport { useAddPopup } from '../state/application/hooks';\n\nfunction useHandleTransactionReceipt() {\n  const addTransaction = useTransactionAdder();\n  const addPopup = useAddPopup();\n  return useCallback((promise, summary) => {\n    promise.then(tx => addTransaction(tx, {\n      summary\n    })).catch(err => {\n      if (err.message.includes('User denied')) {\n        // User denied transaction signature on MetaMask.\n        return;\n      }\n\n      const message = `Unable to ${summary[0].toLowerCase()}${summary.slice(1)}`;\n      console.error(`${message}: ${err.message || err.stack}`);\n      addPopup({\n        error: {\n          message,\n          stack: err.message || err.stack\n        }\n      });\n    });\n  }, [addPopup, addTransaction]);\n}\n\nexport default useHandleTransactionReceipt;","map":{"version":3,"sources":["C:/Users/ali_9/Desktop/StrawBerry_UI/src/hooks/useHandleTransactionReceipt.ts"],"names":["useCallback","useTransactionAdder","useAddPopup","useHandleTransactionReceipt","addTransaction","addPopup","promise","summary","then","tx","catch","err","message","includes","toLowerCase","slice","console","error","stack"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,SAASC,mBAAT,QAAoC,6BAApC;AACA,SAASC,WAAT,QAA4B,4BAA5B;;AAEA,SAASC,2BAAT,GAAyG;AACvG,QAAMC,cAAc,GAAGH,mBAAmB,EAA1C;AACA,QAAMI,QAAQ,GAAGH,WAAW,EAA5B;AAEA,SAAOF,WAAW,CAChB,CAACM,OAAD,EAAwCC,OAAxC,KAA4D;AAC1DD,IAAAA,OAAO,CACJE,IADH,CACSC,EAAD,IAAQL,cAAc,CAACK,EAAD,EAAK;AAAEF,MAAAA;AAAF,KAAL,CAD9B,EAEGG,KAFH,CAEUC,GAAD,IAAS;AACd,UAAIA,GAAG,CAACC,OAAJ,CAAYC,QAAZ,CAAqB,aAArB,CAAJ,EAAyC;AACvC;AACA;AACD;;AACD,YAAMD,OAAO,GAAI,aAAYL,OAAO,CAAC,CAAD,CAAP,CAAWO,WAAX,EAAyB,GAAEP,OAAO,CAACQ,KAAR,CAAc,CAAd,CAAiB,EAAzE;AACAC,MAAAA,OAAO,CAACC,KAAR,CAAe,GAAEL,OAAQ,KAAID,GAAG,CAACC,OAAJ,IAAeD,GAAG,CAACO,KAAM,EAAtD;AACAb,MAAAA,QAAQ,CAAC;AAAEY,QAAAA,KAAK,EAAE;AAAEL,UAAAA,OAAF;AAAWM,UAAAA,KAAK,EAAEP,GAAG,CAACC,OAAJ,IAAeD,GAAG,CAACO;AAArC;AAAT,OAAD,CAAR;AACD,KAVH;AAWD,GAbe,EAchB,CAACb,QAAD,EAAWD,cAAX,CAdgB,CAAlB;AAgBD;;AAED,eAAeD,2BAAf","sourcesContent":["import { useCallback } from 'react';\nimport { TransactionResponse } from '@ethersproject/providers';\nimport { useTransactionAdder } from '../state/transactions/hooks';\nimport { useAddPopup } from '../state/application/hooks';\n\nfunction useHandleTransactionReceipt(): (promise: Promise<TransactionResponse>, summary: string) => void {\n  const addTransaction = useTransactionAdder();\n  const addPopup = useAddPopup();\n\n  return useCallback(\n    (promise: Promise<TransactionResponse>, summary: string) => {\n      promise\n        .then((tx) => addTransaction(tx, { summary }))\n        .catch((err) => {\n          if (err.message.includes('User denied')) {\n            // User denied transaction signature on MetaMask.\n            return;\n          }\n          const message = `Unable to ${summary[0].toLowerCase()}${summary.slice(1)}`;\n          console.error(`${message}: ${err.message || err.stack}`);\n          addPopup({ error: { message, stack: err.message || err.stack } });\n        });\n    },\n    [addPopup, addTransaction],\n  );\n}\n\nexport default useHandleTransactionReceipt;\n"]},"metadata":{},"sourceType":"module"}