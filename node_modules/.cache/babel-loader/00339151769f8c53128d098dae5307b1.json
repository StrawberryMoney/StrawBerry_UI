{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { BigNumber } from 'ethers';\nimport useTombFinance from './useTombFinance';\nimport useRefresh from './useRefresh';\n\nconst useStakedBalanceOnMasonry = () => {\n  const {\n    slowRefresh\n  } = useRefresh();\n  const [balance, setBalance] = useState(BigNumber.from(0));\n  const tombFinance = useTombFinance();\n  const isUnlocked = tombFinance === null || tombFinance === void 0 ? void 0 : tombFinance.isUnlocked;\n  useEffect(() => {\n    async function fetchBalance() {\n      try {\n        setBalance(await tombFinance.getStakedSharesOnMasonry());\n      } catch (e) {\n        console.error(e);\n      }\n    }\n\n    if (isUnlocked) {\n      fetchBalance();\n    }\n  }, [slowRefresh, isUnlocked, tombFinance]);\n  return balance;\n};\n\nexport default useStakedBalanceOnMasonry;","map":{"version":3,"sources":["C:/Users/ali_9/Desktop/StrawBerry_UI/src/hooks/useStakedBalanceOnMasonry.ts"],"names":["useEffect","useState","BigNumber","useTombFinance","useRefresh","useStakedBalanceOnMasonry","slowRefresh","balance","setBalance","from","tombFinance","isUnlocked","fetchBalance","getStakedSharesOnMasonry","e","console","error"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,yBAAyB,GAAG,MAAM;AACtC,QAAM;AAAEC,IAAAA;AAAF,MAAkBF,UAAU,EAAlC;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAACC,SAAS,CAACO,IAAV,CAAe,CAAf,CAAD,CAAtC;AACA,QAAMC,WAAW,GAAGP,cAAc,EAAlC;AACA,QAAMQ,UAAU,GAAGD,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAEC,UAAhC;AACAX,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeY,YAAf,GAA8B;AAC5B,UAAI;AACFJ,QAAAA,UAAU,CAAC,MAAME,WAAW,CAACG,wBAAZ,EAAP,CAAV;AACD,OAFD,CAEE,OAAOC,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF;;AACD,QAAIH,UAAJ,EAAgB;AACdC,MAAAA,YAAY;AACb;AACF,GAXQ,EAWN,CAACN,WAAD,EAAcK,UAAd,EAA0BD,WAA1B,CAXM,CAAT;AAYA,SAAOH,OAAP;AACD,CAlBD;;AAoBA,eAAeF,yBAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { BigNumber } from 'ethers';\nimport useTombFinance from './useTombFinance';\nimport useRefresh from './useRefresh';\n\nconst useStakedBalanceOnMasonry = () => {\n  const { slowRefresh } = useRefresh();\n  const [balance, setBalance] = useState(BigNumber.from(0));\n  const tombFinance = useTombFinance();\n  const isUnlocked = tombFinance?.isUnlocked;\n  useEffect(() => {\n    async function fetchBalance() {\n      try {\n        setBalance(await tombFinance.getStakedSharesOnMasonry());\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    if (isUnlocked) {\n      fetchBalance();\n    }\n  }, [slowRefresh, isUnlocked, tombFinance]);\n  return balance;\n};\n\nexport default useStakedBalanceOnMasonry;\n"]},"metadata":{},"sourceType":"module"}