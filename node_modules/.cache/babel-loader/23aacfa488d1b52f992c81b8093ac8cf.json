{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ali_9\\\\Desktop\\\\StrawBerry_UI\\\\src\\\\components\\\\Popups\\\\TransactionPopup.tsx\";\nimport React, { useContext } from 'react';\nimport { AlertCircle, CheckCircle } from 'react-feather';\nimport styled, { ThemeContext } from 'styled-components';\nimport { useWallet } from 'use-wallet';\nimport config from '../../config';\nconst RowNoFlex = styled.div`\n  flex-wrap: nowrap;\n`;\nexport default function TransactionPopup(_ref) {\n  let {\n    hash,\n    success,\n    summary\n  } = _ref;\n  const {\n    chainId\n  } = useWallet();\n  const theme = useContext(ThemeContext);\n  return /*#__PURE__*/React.createElement(RowNoFlex, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingRight: 16,\n      display: 'flex',\n      alignContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, success ? /*#__PURE__*/React.createElement(CheckCircle, {\n    color: theme.color.teal[200],\n    size: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 20\n    }\n  }) : /*#__PURE__*/React.createElement(AlertCircle, {\n    color: \"#FF6871\",\n    size: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 78\n    }\n  }), /*#__PURE__*/React.createElement(StyledPopupDesc, {\n    style: {\n      marginLeft: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, summary !== null && summary !== void 0 ? summary : 'Hash: ' + hash.slice(0, 8) + '...' + hash.slice(58, 65))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), chainId && /*#__PURE__*/React.createElement(StyledLink, {\n    target: \"_blank\",\n    href: `${config.avaxscanUrl}/tx/${hash}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"View on Avaxscan\")));\n}\nconst StyledPopupDesc = styled.span`\n  font-weight: 500;\n  color: ${props => props.theme.color.grey[300]};\n`;\nconst StyledLink = styled.a`\n  color: ${props => props.theme.color.grey[500]};\n`;","map":{"version":3,"sources":["C:/Users/ali_9/Desktop/StrawBerry_UI/src/components/Popups/TransactionPopup.tsx"],"names":["React","useContext","AlertCircle","CheckCircle","styled","ThemeContext","useWallet","config","RowNoFlex","div","TransactionPopup","hash","success","summary","chainId","theme","paddingRight","display","alignContent","color","teal","marginLeft","slice","avaxscanUrl","StyledPopupDesc","span","props","grey","StyledLink","a"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,eAAzC;AACA,OAAOC,MAAP,IAAiBC,YAAjB,QAAqC,mBAArC;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,MAAMC,SAAS,GAAGJ,MAAM,CAACK,GAAI;AAC7B;AACA,CAFA;AAIA,eAAe,SAASC,gBAAT,OAQZ;AAAA,MARsC;AACvCC,IAAAA,IADuC;AAEvCC,IAAAA,OAFuC;AAGvCC,IAAAA;AAHuC,GAQtC;AACD,QAAM;AAAEC,IAAAA;AAAF,MAAcR,SAAS,EAA7B;AACA,QAAMS,KAAK,GAAGd,UAAU,CAACI,YAAD,CAAxB;AAEA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAE;AAAEW,MAAAA,YAAY,EAAE,EAAhB;AAAoBC,MAAAA,OAAO,EAAE,MAA7B;AAAqCC,MAAAA,YAAY,EAAC;AAAlD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,OAAO,gBAAG,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAEG,KAAK,CAACI,KAAN,CAAYC,IAAZ,CAAiB,GAAjB,CAApB;AAA2C,IAAA,IAAI,EAAE,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBAA6D,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,SAAnB;AAA6B,IAAA,IAAI,EAAE,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADvE,eAEE,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAAE;AAAb,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+CR,OAA/C,aAA+CA,OAA/C,cAA+CA,OAA/C,GAA0D,WAAWF,IAAI,CAACW,KAAL,CAAW,CAAX,EAAc,CAAd,CAAX,GAA8B,KAA9B,GAAsCX,IAAI,CAACW,KAAL,CAAW,EAAX,EAAe,EAAf,CAAhG,CAFF,CADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGR,OAAO,iBACN,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAC,QAAnB;AAA4B,IAAA,IAAI,EAAG,GAAEP,MAAM,CAACgB,WAAY,OAAMZ,IAAK,EAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ,CALF,CADF;AAgBD;AAED,MAAMa,eAAe,GAAGpB,MAAM,CAACqB,IAAK;AACpC;AACA,WAAYC,KAAD,IAAWA,KAAK,CAACX,KAAN,CAAYI,KAAZ,CAAkBQ,IAAlB,CAAuB,GAAvB,CAA4B;AAClD,CAHA;AAKA,MAAMC,UAAU,GAAGxB,MAAM,CAACyB,CAAE;AAC5B,WAAYH,KAAD,IAAWA,KAAK,CAACX,KAAN,CAAYI,KAAZ,CAAkBQ,IAAlB,CAAuB,GAAvB,CAA4B;AAClD,CAFA","sourcesContent":["import React, { useContext } from 'react';\nimport { AlertCircle, CheckCircle } from 'react-feather';\nimport styled, { ThemeContext } from 'styled-components';\nimport { useWallet } from 'use-wallet';\nimport config from '../../config';\n\nconst RowNoFlex = styled.div`\n  flex-wrap: nowrap;\n`;\n\nexport default function TransactionPopup({\n  hash,\n  success,\n  summary,\n}: {\n  hash: string;\n  success?: boolean;\n  summary?: string;\n}) {\n  const { chainId } = useWallet();\n  const theme = useContext(ThemeContext);\n\n  return (\n    <RowNoFlex>\n      <div style={{ paddingRight: 16, display: 'flex', alignContent:'center' }}>\n        {success ? <CheckCircle color={theme.color.teal[200]} size={24} /> : <AlertCircle color=\"#FF6871\" size={24} />}\n        <StyledPopupDesc style={{marginLeft: '10px'}}>{summary ?? 'Hash: ' + hash.slice(0, 8) + '...' + hash.slice(58, 65)}</StyledPopupDesc>\n      </div>\n      <div>\n        <br/>\n        {chainId && (\n          <StyledLink target=\"_blank\" href={`${config.avaxscanUrl}/tx/${hash}`}>\n             View on Avaxscan\n          </StyledLink>\n        )}\n      </div>\n    </RowNoFlex>\n  );\n}\n\nconst StyledPopupDesc = styled.span`\n  font-weight: 500;\n  color: ${(props) => props.theme.color.grey[300]};\n`;\n\nconst StyledLink = styled.a`\n  color: ${(props) => props.theme.color.grey[500]};\n`;\n"]},"metadata":{},"sourceType":"module"}