{"ast":null,"code":"import { ChainId } from '@traderjoe-xyz/sdk';\nconst configurations = {\n  development: {\n    chainId: ChainId.AVALANCHE,\n    networkName: 'Fantom Opera Testnet',\n    avaxscanUrl: 'https://testnet.avaxscan.com',\n    defaultProvider: 'https://rpc.testnet.fantom.network/',\n    deployments: require('./tomb-finance/deployments/deployments.testing.json'),\n    externalTokens: {\n      WAVAX: ['0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7', 18],\n      FUSDT: ['0xc7198437980c041c805A1EDcbA50c1Ce5db95118', 6],\n      // This is actually usdc on mainnet not fusdt\n      USDT: ['0xc7198437980c041c805A1EDcbA50c1Ce5db95118', 6],\n      // This is actually usdc on mainnet not fusdt\n      WETH: ['0x74b23882a30290451A17c44f4F05243b6b58C76d', 18],\n      // BOO: 0x841FAD6EAe12c286d1Fd18d1d525DFfA75C7EFFE 18\n      TOMB: ['0x6c021ae822bea943b2e66552bde1d2696a53fbb7', 18],\n      // ZOO: 0x09e145a1d53c0045f41aeef25d8ff982ae74dd56 0\n      MIM: ['0x130966628846BFd36ff31a822705796e8cb8C18D', 18],\n      // SHIBA: 0x9ba3e4f84a34df4e08c112e1a0ff148b81655615 9\n      THRONE: ['0x070092b3A985f9E5424351D68730c9A318ad96eb', 18],\n      USDC: ['0xA7D7079b0FEaD91F3e65f86E8915Cb59c1a4C664', 6],\n      JOE: ['0x6e84a6216eA6dACC71eE8E6b0a5B7322EEbC0fDd', 18],\n      'USDT-AVAX-LP': ['0xeD8CBD9F0cE3C6986b22002F03c6475CEb7a6256', 18],\n      'BERRY-AVAX-LP': ['0xFae3957daAE1dA061489FB0e4DD403324593C1dA', 18],\n      // \n      'BSHARE-AVAX-LP': ['0x01eE7717bC86F0415232F9BCb199970e6Ce49688', 18],\n      'BERRY-BSHARE-LP': ['0x8825c080146Af0c2D573433946Fc94f7D0fd10b9', 18]\n    },\n    baseLaunchDate: new Date('2021-06-02 13:00:00Z'),\n    bondLaunchesAt: new Date('2020-12-03T15:00:00Z'),\n    masonryLaunchesAt: new Date('2020-12-11T00:00:00Z'),\n    refreshInterval: 10000\n  },\n  production: {\n    chainId: ChainId.AVALANCHE,\n    networkName: 'Avalanche Mainnet',\n    avaxscanUrl: 'https://snowtrace.io',\n    defaultProvider: 'https://api.avax.network/ext/bc/C/rpc',\n    deployments: require('./tomb-finance/deployments/deployments.mainnet.json'),\n    externalTokens: {\n      WAVAX: ['0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7', 18],\n      FUSDT: ['0xc7198437980c041c805A1EDcbA50c1Ce5db95118', 6],\n      // This is actually usdc on mainnet not fusdt\n      USDT: ['0xc7198437980c041c805A1EDcbA50c1Ce5db95118', 6],\n      // This is actually usdc on mainnet not fusdt\n      WETH: ['0x74b23882a30290451A17c44f4F05243b6b58C76d', 18],\n      // BOO: 0x841FAD6EAe12c286d1Fd18d1d525DFfA75C7EFFE 18\n      TOMB: ['0x6c021ae822bea943b2e66552bde1d2696a53fbb7', 18],\n      // ZOO: 0x09e145a1d53c0045f41aeef25d8ff982ae74dd56 0\n      MIM: ['0x130966628846BFd36ff31a822705796e8cb8C18D', 18],\n      // SHIBA: 0x9ba3e4f84a34df4e08c112e1a0ff148b81655615 9\n      THRONE: ['0x070092b3A985f9E5424351D68730c9A318ad96eb', 18],\n      USDC: ['0xA7D7079b0FEaD91F3e65f86E8915Cb59c1a4C664', 6],\n      JOE: ['0x6e84a6216eA6dACC71eE8E6b0a5B7322EEbC0fDd', 18],\n      'USDT-AVAX-LP': ['0xeD8CBD9F0cE3C6986b22002F03c6475CEb7a6256', 18],\n      'BERRY-AVAX-LP': ['0xFae3957daAE1dA061489FB0e4DD403324593C1dA', 18],\n      // \n      'BSHARE-AVAX-LP': ['0x01eE7717bC86F0415232F9BCb199970e6Ce49688', 18],\n      'BERRY-BSHARE-LP': ['0x8825c080146Af0c2D573433946Fc94f7D0fd10b9', 18]\n    },\n    baseLaunchDate: new Date('2022-02-25 00:00:00Z'),\n    bondLaunchesAt: new Date('2020-12-03T15:00:00Z'),\n    masonryLaunchesAt: new Date('2020-12-11T00:00:00Z'),\n    refreshInterval: 10000\n  }\n};\nexport const bankDefinitions = {\n  /*\n  Explanation:\n  name: description of the card\n  poolId: the poolId assigned in the contract\n  sectionInUI: way to distinguish in which of the 3 pool groups it should be listed\n        - 0 = Single asset stake pools\n        - 1 = LP asset staking rewarding TOMB\n        - 2 = LP asset staking rewarding TSHARE\n  contract: the contract name which will be loaded from the deployment.environmnet.json\n  depositTokenName : the name of the token to be deposited\n  earnTokenName: the rewarded token\n  finished: will disable the pool on the UI if set to true\n  sort: the order of the pool\n  */\n  TombAvaxRewardPool: {\n    name: 'Stake WAVAX, earn BERRY',\n    poolId: 0,\n    sectionInUI: 0,\n    contract: 'TombAvaxRewardPool',\n    depositTokenName: 'WAVAX',\n    earnTokenName: 'BERRY',\n    multiplier: \"30x\",\n    finished: false,\n    starttime: 1646629200000,\n    sort: 1,\n    closedForStaking: false\n  },\n  TombUsdcRewardPool: {\n    name: 'Stake USDC, earn BERRY',\n    poolId: 1,\n    sectionInUI: 0,\n    contract: 'TombUsdcRewardPool',\n    depositTokenName: 'USDC',\n    earnTokenName: 'BERRY',\n    multiplier: \"30x\",\n    finished: false,\n    starttime: 1646629200000,\n    sort: 2,\n    closedForStaking: false\n  },\n  TombMimRewardPool: {\n    name: 'Stake MIM, earn BERRY',\n    poolId: 2,\n    sectionInUI: 0,\n    contract: 'TombMimRewardPool',\n    depositTokenName: 'MIM',\n    earnTokenName: 'BERRY',\n    multiplier: \"30x\",\n    finished: false,\n    starttime: 1646629200000,\n    sort: 3,\n    closedForStaking: false\n  },\n  TombJoeRewardPool: {\n    name: 'Stake JOE, earn BERRY',\n    poolId: 3,\n    sectionInUI: 0,\n    contract: 'TombJoeRewardPool',\n    depositTokenName: 'JOE',\n    earnTokenName: 'BERRY',\n    multiplier: \"10x\",\n    finished: false,\n    starttime: 1646629200000,\n    sort: 4,\n    closedForStaking: false\n  },\n  TombAvaxLPTShareRewardPool: {\n    name: 'Earn BSHARE by BERRY-AVAX LP',\n    poolId: 0,\n    sectionInUI: 2,\n    contract: 'TombAvaxLPTShareRewardPool',\n    depositTokenName: 'BERRY-AVAX-LP',\n    earnTokenName: 'BSHARE',\n    multiplier: \"100x\",\n    finished: false,\n    starttime: 1646715600000,\n    sort: 5,\n    closedForStaking: false\n  },\n  TshareAvaxLPTShareRewardPool: {\n    name: 'Earn BSHARE by BSHARE-WAVAX LP',\n    poolId: 1,\n    sectionInUI: 2,\n    contract: 'TshareAvaxLPTShareRewardPool',\n    depositTokenName: 'BSHARE-AVAX-LP',\n    earnTokenName: 'BSHARE',\n    multiplier: \"100x\",\n    finished: false,\n    starttime: 1646715600000,\n    sort: 6,\n    closedForStaking: false\n  }\n};\nexport default configurations['production'];","map":{"version":3,"sources":["C:/Users/ali_9/Desktop/StrawBerry_UI/src/config.ts"],"names":["ChainId","configurations","development","chainId","AVALANCHE","networkName","avaxscanUrl","defaultProvider","deployments","require","externalTokens","WAVAX","FUSDT","USDT","WETH","TOMB","MIM","THRONE","USDC","JOE","baseLaunchDate","Date","bondLaunchesAt","masonryLaunchesAt","refreshInterval","production","bankDefinitions","TombAvaxRewardPool","name","poolId","sectionInUI","contract","depositTokenName","earnTokenName","multiplier","finished","starttime","sort","closedForStaking","TombUsdcRewardPool","TombMimRewardPool","TombJoeRewardPool","TombAvaxLPTShareRewardPool","TshareAvaxLPTShareRewardPool"],"mappings":"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","sourcesContent":["import { ChainId } from '@traderjoe-xyz/sdk';\n\nimport { Configuration } from './tomb-finance/config';\nimport { BankInfo } from './tomb-finance';\n\nconst configurations: { [env: string]: Configuration } = {\n  development: {\n    chainId: ChainId.AVALANCHE,\n    networkName: 'Fantom Opera Testnet',\n    avaxscanUrl: 'https://testnet.avaxscan.com',\n    defaultProvider: 'https://rpc.testnet.fantom.network/',\n    deployments: require('./tomb-finance/deployments/deployments.testing.json'),\n    externalTokens: {\n      WAVAX: ['0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7', 18],\n      FUSDT: ['0xc7198437980c041c805A1EDcbA50c1Ce5db95118', 6], // This is actually usdc on mainnet not fusdt\n      USDT: ['0xc7198437980c041c805A1EDcbA50c1Ce5db95118', 6], // This is actually usdc on mainnet not fusdt\n      WETH: ['0x74b23882a30290451A17c44f4F05243b6b58C76d', 18], // BOO: 0x841FAD6EAe12c286d1Fd18d1d525DFfA75C7EFFE 18\n      TOMB: ['0x6c021ae822bea943b2e66552bde1d2696a53fbb7', 18], // ZOO: 0x09e145a1d53c0045f41aeef25d8ff982ae74dd56 0\n      MIM: ['0x130966628846BFd36ff31a822705796e8cb8C18D', 18], // SHIBA: 0x9ba3e4f84a34df4e08c112e1a0ff148b81655615 9\n      THRONE: ['0x070092b3A985f9E5424351D68730c9A318ad96eb', 18],\n      USDC: ['0xA7D7079b0FEaD91F3e65f86E8915Cb59c1a4C664', 6],\n      JOE: ['0x6e84a6216eA6dACC71eE8E6b0a5B7322EEbC0fDd', 18],\n      'USDT-AVAX-LP': ['0xeD8CBD9F0cE3C6986b22002F03c6475CEb7a6256', 18],\n      'BERRY-AVAX-LP': ['0xFae3957daAE1dA061489FB0e4DD403324593C1dA', 18], // \n      'BSHARE-AVAX-LP': ['0x01eE7717bC86F0415232F9BCb199970e6Ce49688', 18],\n      'BERRY-BSHARE-LP': ['0x8825c080146Af0c2D573433946Fc94f7D0fd10b9', 18],\n    },\n    baseLaunchDate: new Date('2021-06-02 13:00:00Z'),\n    bondLaunchesAt: new Date('2020-12-03T15:00:00Z'),\n    masonryLaunchesAt: new Date('2020-12-11T00:00:00Z'),\n    refreshInterval: 10000,\n  },\n  production: {\n    chainId: ChainId.AVALANCHE,\n    networkName: 'Avalanche Mainnet',\n    avaxscanUrl: 'https://snowtrace.io',\n    defaultProvider: 'https://api.avax.network/ext/bc/C/rpc',\n    deployments: require('./tomb-finance/deployments/deployments.mainnet.json'),\n    externalTokens: {\n      WAVAX: ['0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7', 18],\n      FUSDT: ['0xc7198437980c041c805A1EDcbA50c1Ce5db95118', 6], // This is actually usdc on mainnet not fusdt\n      USDT: ['0xc7198437980c041c805A1EDcbA50c1Ce5db95118', 6], // This is actually usdc on mainnet not fusdt\n      WETH: ['0x74b23882a30290451A17c44f4F05243b6b58C76d', 18], // BOO: 0x841FAD6EAe12c286d1Fd18d1d525DFfA75C7EFFE 18\n      TOMB: ['0x6c021ae822bea943b2e66552bde1d2696a53fbb7', 18], // ZOO: 0x09e145a1d53c0045f41aeef25d8ff982ae74dd56 0\n      MIM: ['0x130966628846BFd36ff31a822705796e8cb8C18D', 18], // SHIBA: 0x9ba3e4f84a34df4e08c112e1a0ff148b81655615 9\n      THRONE: ['0x070092b3A985f9E5424351D68730c9A318ad96eb', 18],\n      USDC: ['0xA7D7079b0FEaD91F3e65f86E8915Cb59c1a4C664', 6],\n      JOE: ['0x6e84a6216eA6dACC71eE8E6b0a5B7322EEbC0fDd', 18],\n      'USDT-AVAX-LP': ['0xeD8CBD9F0cE3C6986b22002F03c6475CEb7a6256', 18],\n      'BERRY-AVAX-LP': ['0xFae3957daAE1dA061489FB0e4DD403324593C1dA', 18], // \n      'BSHARE-AVAX-LP': ['0x01eE7717bC86F0415232F9BCb199970e6Ce49688', 18],\n      'BERRY-BSHARE-LP': ['0x8825c080146Af0c2D573433946Fc94f7D0fd10b9', 18],\n    },\n    baseLaunchDate: new Date('2022-02-25 00:00:00Z'),\n    bondLaunchesAt: new Date('2020-12-03T15:00:00Z'),\n    masonryLaunchesAt: new Date('2020-12-11T00:00:00Z'),\n    refreshInterval: 10000,\n  },\n};\n\n\nexport const bankDefinitions: { [contractName: string]: BankInfo } = {\n  /*\n  Explanation:\n  name: description of the card\n  poolId: the poolId assigned in the contract\n  sectionInUI: way to distinguish in which of the 3 pool groups it should be listed\n        - 0 = Single asset stake pools\n        - 1 = LP asset staking rewarding TOMB\n        - 2 = LP asset staking rewarding TSHARE\n  contract: the contract name which will be loaded from the deployment.environmnet.json\n  depositTokenName : the name of the token to be deposited\n  earnTokenName: the rewarded token\n  finished: will disable the pool on the UI if set to true\n  sort: the order of the pool\n  */\n  TombAvaxRewardPool: {\n    name: 'Stake WAVAX, earn BERRY',\n    poolId: 0,\n    sectionInUI: 0,\n    contract: 'TombAvaxRewardPool',\n    depositTokenName: 'WAVAX',\n    earnTokenName: 'BERRY',\n    multiplier: \"30x\",\n    finished: false,\n    starttime: 1646629200000,\n    sort: 1,\n    closedForStaking: false,\n  },\n  TombUsdcRewardPool: {\n    name: 'Stake USDC, earn BERRY',\n    poolId: 1,\n    sectionInUI: 0,\n    contract: 'TombUsdcRewardPool',\n    depositTokenName: 'USDC',\n    earnTokenName: 'BERRY',\n    multiplier: \"30x\",\n    finished: false,\n    starttime: 1646629200000,\n    sort: 2,\n    closedForStaking: false,\n  },\n  TombMimRewardPool: {\n    name: 'Stake MIM, earn BERRY',\n    poolId: 2,\n    sectionInUI: 0,\n    contract: 'TombMimRewardPool',\n    depositTokenName: 'MIM',\n    earnTokenName: 'BERRY',\n    multiplier: \"30x\",\n    finished: false,\n    starttime: 1646629200000,\n    sort: 3,\n    closedForStaking: false,\n  },\n  TombJoeRewardPool: {\n    name: 'Stake JOE, earn BERRY',\n    poolId: 3,\n    sectionInUI: 0,\n    contract: 'TombJoeRewardPool',\n    depositTokenName: 'JOE',\n    earnTokenName: 'BERRY',\n    multiplier: \"10x\",\n    finished: false,\n    starttime: 1646629200000,\n    sort: 4,\n    closedForStaking: false,\n  },\n  TombAvaxLPTShareRewardPool: {\n    name: 'Earn BSHARE by BERRY-AVAX LP',\n    poolId: 0,\n    sectionInUI: 2,\n    contract: 'TombAvaxLPTShareRewardPool',\n    depositTokenName: 'BERRY-AVAX-LP',\n    earnTokenName: 'BSHARE',\n    multiplier: \"100x\",\n    finished: false,\n    starttime: 1646715600000,\n    sort: 5,\n    closedForStaking: false,\n  },\n  TshareAvaxLPTShareRewardPool: {\n    name: 'Earn BSHARE by BSHARE-WAVAX LP',\n    poolId: 1,\n    sectionInUI: 2,\n    contract: 'TshareAvaxLPTShareRewardPool',\n    depositTokenName: 'BSHARE-AVAX-LP',\n    earnTokenName: 'BSHARE',\n    multiplier: \"100x\",\n    finished: false,\n    starttime: 1646715600000,\n    sort: 6,\n    closedForStaking: false,\n  },\n};\n\nexport default configurations['production'];\n"]},"metadata":{},"sourceType":"module"}